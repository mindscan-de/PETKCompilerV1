/*
 * generated by Xtext 2.27.0
 */
grammar InternalAiDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package de.mindscan.ai.aidsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.mindscan.ai.aidsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import de.mindscan.ai.aidsl.services.AiDslGrammarAccess;

}
@parser::members {
	private AiDslGrammarAccess grammarAccess;

	public void setGrammarAccess(AiDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePackageDeclaration
entryRulePackageDeclaration
:
{ before(grammarAccess.getPackageDeclarationRule()); }
	 rulePackageDeclaration
{ after(grammarAccess.getPackageDeclarationRule()); } 
	 EOF 
;

// Rule PackageDeclaration
rulePackageDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageDeclarationAccess().getGroup()); }
		(rule__PackageDeclaration__Group__0)
		{ after(grammarAccess.getPackageDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImportDeclaration
entryRuleImportDeclaration
:
{ before(grammarAccess.getImportDeclarationRule()); }
	 ruleImportDeclaration
{ after(grammarAccess.getImportDeclarationRule()); } 
	 EOF 
;

// Rule ImportDeclaration
ruleImportDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportDeclarationAccess().getGroup()); }
		(rule__ImportDeclaration__Group__0)
		{ after(grammarAccess.getImportDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVMNodeDefinition
entryRuleVMNodeDefinition
:
{ before(grammarAccess.getVMNodeDefinitionRule()); }
	 ruleVMNodeDefinition
{ after(grammarAccess.getVMNodeDefinitionRule()); } 
	 EOF 
;

// Rule VMNodeDefinition
ruleVMNodeDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVMNodeDefinitionAccess().getGroup()); }
		(rule__VMNodeDefinition__Group__0)
		{ after(grammarAccess.getVMNodeDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVMNodeEleemnts
entryRuleVMNodeEleemnts
:
{ before(grammarAccess.getVMNodeEleemntsRule()); }
	 ruleVMNodeEleemnts
{ after(grammarAccess.getVMNodeEleemntsRule()); } 
	 EOF 
;

// Rule VMNodeEleemnts
ruleVMNodeEleemnts 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVMNodeEleemntsAccess().getAlternatives()); }
		(rule__VMNodeEleemnts__Alternatives)
		{ after(grammarAccess.getVMNodeEleemntsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVMNodeOpCodeElement
entryRuleVMNodeOpCodeElement
:
{ before(grammarAccess.getVMNodeOpCodeElementRule()); }
	 ruleVMNodeOpCodeElement
{ after(grammarAccess.getVMNodeOpCodeElementRule()); } 
	 EOF 
;

// Rule VMNodeOpCodeElement
ruleVMNodeOpCodeElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVMNodeOpCodeElementAccess().getGroup()); }
		(rule__VMNodeOpCodeElement__Group__0)
		{ after(grammarAccess.getVMNodeOpCodeElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVMNodeOutElements
entryRuleVMNodeOutElements
:
{ before(grammarAccess.getVMNodeOutElementsRule()); }
	 ruleVMNodeOutElements
{ after(grammarAccess.getVMNodeOutElementsRule()); } 
	 EOF 
;

// Rule VMNodeOutElements
ruleVMNodeOutElements 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVMNodeOutElementsAccess().getGroup()); }
		(rule__VMNodeOutElements__Group__0)
		{ after(grammarAccess.getVMNodeOutElementsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVMNodeOutElement
entryRuleVMNodeOutElement
:
{ before(grammarAccess.getVMNodeOutElementRule()); }
	 ruleVMNodeOutElement
{ after(grammarAccess.getVMNodeOutElementRule()); } 
	 EOF 
;

// Rule VMNodeOutElement
ruleVMNodeOutElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVMNodeOutElementAccess().getGroup()); }
		(rule__VMNodeOutElement__Group__0)
		{ after(grammarAccess.getVMNodeOutElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVMNodeInElements
entryRuleVMNodeInElements
:
{ before(grammarAccess.getVMNodeInElementsRule()); }
	 ruleVMNodeInElements
{ after(grammarAccess.getVMNodeInElementsRule()); } 
	 EOF 
;

// Rule VMNodeInElements
ruleVMNodeInElements 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVMNodeInElementsAccess().getGroup()); }
		(rule__VMNodeInElements__Group__0)
		{ after(grammarAccess.getVMNodeInElementsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVMNodeInElement
entryRuleVMNodeInElement
:
{ before(grammarAccess.getVMNodeInElementRule()); }
	 ruleVMNodeInElement
{ after(grammarAccess.getVMNodeInElementRule()); } 
	 EOF 
;

// Rule VMNodeInElement
ruleVMNodeInElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVMNodeInElementAccess().getGroup()); }
		(rule__VMNodeInElement__Group__0)
		{ after(grammarAccess.getVMNodeInElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVMNodeElement
entryRuleVMNodeElement
:
{ before(grammarAccess.getVMNodeElementRule()); }
	 ruleVMNodeElement
{ after(grammarAccess.getVMNodeElementRule()); } 
	 EOF 
;

// Rule VMNodeElement
ruleVMNodeElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVMNodeElementAccess().getGroup()); }
		(rule__VMNodeElement__Group__0)
		{ after(grammarAccess.getVMNodeElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVMOverrideElement
entryRuleVMOverrideElement
:
{ before(grammarAccess.getVMOverrideElementRule()); }
	 ruleVMOverrideElement
{ after(grammarAccess.getVMOverrideElementRule()); } 
	 EOF 
;

// Rule VMOverrideElement
ruleVMOverrideElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVMOverrideElementAccess().getGroup()); }
		(rule__VMOverrideElement__Group__0)
		{ after(grammarAccess.getVMOverrideElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLlmTaskDefinition
entryRuleLlmTaskDefinition
:
{ before(grammarAccess.getLlmTaskDefinitionRule()); }
	 ruleLlmTaskDefinition
{ after(grammarAccess.getLlmTaskDefinitionRule()); } 
	 EOF 
;

// Rule LlmTaskDefinition
ruleLlmTaskDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLlmTaskDefinitionAccess().getGroup()); }
		(rule__LlmTaskDefinition__Group__0)
		{ after(grammarAccess.getLlmTaskDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnnotationInterfaceReference
entryRuleAnnotationInterfaceReference
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getAnnotationInterfaceReferenceRule()); }
	 ruleAnnotationInterfaceReference
{ after(grammarAccess.getAnnotationInterfaceReferenceRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule AnnotationInterfaceReference
ruleAnnotationInterfaceReference 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnnotationInterfaceReferenceAccess().getGroup()); }
		(rule__AnnotationInterfaceReference__Group__0)
		{ after(grammarAccess.getAnnotationInterfaceReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleLlmVariableAssignment
entryRuleLlmVariableAssignment
:
{ before(grammarAccess.getLlmVariableAssignmentRule()); }
	 ruleLlmVariableAssignment
{ after(grammarAccess.getLlmVariableAssignmentRule()); } 
	 EOF 
;

// Rule LlmVariableAssignment
ruleLlmVariableAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLlmVariableAssignmentAccess().getGroup()); }
		(rule__LlmVariableAssignment__Group__0)
		{ after(grammarAccess.getLlmVariableAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWorkflowDefinition
entryRuleWorkflowDefinition
:
{ before(grammarAccess.getWorkflowDefinitionRule()); }
	 ruleWorkflowDefinition
{ after(grammarAccess.getWorkflowDefinitionRule()); } 
	 EOF 
;

// Rule WorkflowDefinition
ruleWorkflowDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWorkflowDefinitionAccess().getGroup()); }
		(rule__WorkflowDefinition__Group__0)
		{ after(grammarAccess.getWorkflowDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard
:
{ before(grammarAccess.getQualifiedNameWithWildcardRule()); }
	 ruleQualifiedNameWithWildcard
{ after(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
		(rule__QualifiedNameWithWildcard__Group__0)
		{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__DefinitionsAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getDefinitionsWorkflowDefinitionParserRuleCall_2_0_0()); }
		ruleWorkflowDefinition
		{ after(grammarAccess.getModelAccess().getDefinitionsWorkflowDefinitionParserRuleCall_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getDefinitionsLlmTaskDefinitionParserRuleCall_2_0_1()); }
		ruleLlmTaskDefinition
		{ after(grammarAccess.getModelAccess().getDefinitionsLlmTaskDefinitionParserRuleCall_2_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getDefinitionsVMNodeDefinitionParserRuleCall_2_0_2()); }
		ruleVMNodeDefinition
		{ after(grammarAccess.getModelAccess().getDefinitionsVMNodeDefinitionParserRuleCall_2_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeDefinition__NodetypeAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVMNodeDefinitionAccess().getNodetypeSuperKeyword_1_0_0()); }
		'super'
		{ after(grammarAccess.getVMNodeDefinitionAccess().getNodetypeSuperKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getVMNodeDefinitionAccess().getNodetypeOverlayKeyword_1_0_1()); }
		'overlay'
		{ after(grammarAccess.getVMNodeDefinitionAccess().getNodetypeOverlayKeyword_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeEleemnts__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVMNodeEleemntsAccess().getVMNodeOpCodeElementParserRuleCall_0()); }
		ruleVMNodeOpCodeElement
		{ after(grammarAccess.getVMNodeEleemntsAccess().getVMNodeOpCodeElementParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getVMNodeEleemntsAccess().getVMNodeOutElementsParserRuleCall_1()); }
		ruleVMNodeOutElements
		{ after(grammarAccess.getVMNodeEleemntsAccess().getVMNodeOutElementsParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getVMNodeEleemntsAccess().getVMNodeInElementsParserRuleCall_2()); }
		ruleVMNodeInElements
		{ after(grammarAccess.getVMNodeEleemntsAccess().getVMNodeInElementsParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getVMNodeEleemntsAccess().getVMNodeElementParserRuleCall_3()); }
		ruleVMNodeElement
		{ after(grammarAccess.getVMNodeEleemntsAccess().getVMNodeElementParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getVMNodeEleemntsAccess().getVMOverrideElementParserRuleCall_4()); }
		ruleVMOverrideElement
		{ after(grammarAccess.getVMNodeEleemntsAccess().getVMOverrideElementParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeInElement__PolicyAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVMNodeInElementAccess().getPolicyRequireKeyword_0_0_0()); }
		'require'
		{ after(grammarAccess.getVMNodeInElementAccess().getPolicyRequireKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getVMNodeInElementAccess().getPolicyOptionalKeyword_0_0_1()); }
		'optional'
		{ after(grammarAccess.getVMNodeInElementAccess().getPolicyOptionalKeyword_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeElement__PolicyAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVMNodeElementAccess().getPolicyRequireKeyword_0_0_0()); }
		'require'
		{ after(grammarAccess.getVMNodeElementAccess().getPolicyRequireKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getVMNodeElementAccess().getPolicyOptionalKeyword_0_0_1()); }
		'optional'
		{ after(grammarAccess.getVMNodeElementAccess().getPolicyOptionalKeyword_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getPackage_declarationAssignment_0()); }
	(rule__Model__Package_declarationAssignment_0)?
	{ after(grammarAccess.getModelAccess().getPackage_declarationAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getImport_declarationsAssignment_1()); }
	(rule__Model__Import_declarationsAssignment_1)*
	{ after(grammarAccess.getModelAccess().getImport_declarationsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getDefinitionsAssignment_2()); }
	(rule__Model__DefinitionsAssignment_2)*
	{ after(grammarAccess.getModelAccess().getDefinitionsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDeclaration__Group__0__Impl
	rule__PackageDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0()); }
	'package'
	{ after(grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDeclarationAccess().getNameAssignment_1()); }
	(rule__PackageDeclaration__NameAssignment_1)
	{ after(grammarAccess.getPackageDeclarationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDeclaration__Group__0__Impl
	rule__ImportDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDeclarationAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getImportDeclarationAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDeclarationAccess().getImportedNamespaceAssignment_1()); }
	(rule__ImportDeclaration__ImportedNamespaceAssignment_1)
	{ after(grammarAccess.getImportDeclarationAccess().getImportedNamespaceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VMNodeDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VMNodeDefinition__Group__0__Impl
	rule__VMNodeDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVMNodeDefinitionAccess().getVmnodeKeyword_0()); }
	'vmnode'
	{ after(grammarAccess.getVMNodeDefinitionAccess().getVmnodeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VMNodeDefinition__Group__1__Impl
	rule__VMNodeDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVMNodeDefinitionAccess().getNodetypeAssignment_1()); }
	(rule__VMNodeDefinition__NodetypeAssignment_1)?
	{ after(grammarAccess.getVMNodeDefinitionAccess().getNodetypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VMNodeDefinition__Group__2__Impl
	rule__VMNodeDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVMNodeDefinitionAccess().getNameAssignment_2()); }
	(rule__VMNodeDefinition__NameAssignment_2)
	{ after(grammarAccess.getVMNodeDefinitionAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VMNodeDefinition__Group__3__Impl
	rule__VMNodeDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVMNodeDefinitionAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getVMNodeDefinitionAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VMNodeDefinition__Group__4__Impl
	rule__VMNodeDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVMNodeDefinitionAccess().getElementsAssignment_4()); }
	(rule__VMNodeDefinition__ElementsAssignment_4)*
	{ after(grammarAccess.getVMNodeDefinitionAccess().getElementsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VMNodeDefinition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVMNodeDefinitionAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getVMNodeDefinitionAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VMNodeOpCodeElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VMNodeOpCodeElement__Group__0__Impl
	rule__VMNodeOpCodeElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeOpCodeElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVMNodeOpCodeElementAccess().getOpcodeKeyword_0()); }
	'opcode'
	{ after(grammarAccess.getVMNodeOpCodeElementAccess().getOpcodeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeOpCodeElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VMNodeOpCodeElement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeOpCodeElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVMNodeOpCodeElementAccess().getCodeAssignment_1()); }
	(rule__VMNodeOpCodeElement__CodeAssignment_1)
	{ after(grammarAccess.getVMNodeOpCodeElementAccess().getCodeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VMNodeOutElements__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VMNodeOutElements__Group__0__Impl
	rule__VMNodeOutElements__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeOutElements__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVMNodeOutElementsAccess().getVMNodeOutElementsAction_0()); }
	()
	{ after(grammarAccess.getVMNodeOutElementsAccess().getVMNodeOutElementsAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeOutElements__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VMNodeOutElements__Group__1__Impl
	rule__VMNodeOutElements__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeOutElements__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVMNodeOutElementsAccess().getOutKeyword_1()); }
	'out'
	{ after(grammarAccess.getVMNodeOutElementsAccess().getOutKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeOutElements__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VMNodeOutElements__Group__2__Impl
	rule__VMNodeOutElements__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeOutElements__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVMNodeOutElementsAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getVMNodeOutElementsAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeOutElements__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VMNodeOutElements__Group__3__Impl
	rule__VMNodeOutElements__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeOutElements__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVMNodeOutElementsAccess().getOutElementsAssignment_3()); }
	(rule__VMNodeOutElements__OutElementsAssignment_3)*
	{ after(grammarAccess.getVMNodeOutElementsAccess().getOutElementsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeOutElements__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VMNodeOutElements__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeOutElements__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVMNodeOutElementsAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getVMNodeOutElementsAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VMNodeOutElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VMNodeOutElement__Group__0__Impl
	rule__VMNodeOutElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeOutElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVMNodeOutElementAccess().getNameAssignment_0()); }
	(rule__VMNodeOutElement__NameAssignment_0)
	{ after(grammarAccess.getVMNodeOutElementAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeOutElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VMNodeOutElement__Group__1__Impl
	rule__VMNodeOutElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeOutElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVMNodeOutElementAccess().getAsKeyword_1()); }
	'as'
	{ after(grammarAccess.getVMNodeOutElementAccess().getAsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeOutElement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VMNodeOutElement__Group__2__Impl
	rule__VMNodeOutElement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeOutElement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVMNodeOutElementAccess().getTypeAssignment_2()); }
	(rule__VMNodeOutElement__TypeAssignment_2)
	{ after(grammarAccess.getVMNodeOutElementAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeOutElement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VMNodeOutElement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeOutElement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVMNodeOutElementAccess().getGroup_3()); }
	(rule__VMNodeOutElement__Group_3__0)?
	{ after(grammarAccess.getVMNodeOutElementAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VMNodeOutElement__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VMNodeOutElement__Group_3__0__Impl
	rule__VMNodeOutElement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeOutElement__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVMNodeOutElementAccess().getHasrequireAssignment_3_0()); }
	(rule__VMNodeOutElement__HasrequireAssignment_3_0)
	{ after(grammarAccess.getVMNodeOutElementAccess().getHasrequireAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeOutElement__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VMNodeOutElement__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeOutElement__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVMNodeOutElementAccess().getInputreferenceAssignment_3_1()); }
	(rule__VMNodeOutElement__InputreferenceAssignment_3_1)
	{ after(grammarAccess.getVMNodeOutElementAccess().getInputreferenceAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VMNodeInElements__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VMNodeInElements__Group__0__Impl
	rule__VMNodeInElements__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeInElements__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVMNodeInElementsAccess().getVMNodeInElementsAction_0()); }
	()
	{ after(grammarAccess.getVMNodeInElementsAccess().getVMNodeInElementsAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeInElements__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VMNodeInElements__Group__1__Impl
	rule__VMNodeInElements__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeInElements__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVMNodeInElementsAccess().getInKeyword_1()); }
	'in'
	{ after(grammarAccess.getVMNodeInElementsAccess().getInKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeInElements__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VMNodeInElements__Group__2__Impl
	rule__VMNodeInElements__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeInElements__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVMNodeInElementsAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getVMNodeInElementsAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeInElements__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VMNodeInElements__Group__3__Impl
	rule__VMNodeInElements__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeInElements__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVMNodeInElementsAccess().getInElementsAssignment_3()); }
	(rule__VMNodeInElements__InElementsAssignment_3)*
	{ after(grammarAccess.getVMNodeInElementsAccess().getInElementsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeInElements__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VMNodeInElements__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeInElements__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVMNodeInElementsAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getVMNodeInElementsAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VMNodeInElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VMNodeInElement__Group__0__Impl
	rule__VMNodeInElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeInElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVMNodeInElementAccess().getPolicyAssignment_0()); }
	(rule__VMNodeInElement__PolicyAssignment_0)?
	{ after(grammarAccess.getVMNodeInElementAccess().getPolicyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeInElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VMNodeInElement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeInElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVMNodeInElementAccess().getNameAssignment_1()); }
	(rule__VMNodeInElement__NameAssignment_1)
	{ after(grammarAccess.getVMNodeInElementAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VMNodeElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VMNodeElement__Group__0__Impl
	rule__VMNodeElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVMNodeElementAccess().getPolicyAssignment_0()); }
	(rule__VMNodeElement__PolicyAssignment_0)
	{ after(grammarAccess.getVMNodeElementAccess().getPolicyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VMNodeElement__Group__1__Impl
	rule__VMNodeElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVMNodeElementAccess().getTypeAssignment_1()); }
	(rule__VMNodeElement__TypeAssignment_1)
	{ after(grammarAccess.getVMNodeElementAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeElement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VMNodeElement__Group__2__Impl
	rule__VMNodeElement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeElement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVMNodeElementAccess().getNameAssignment_2()); }
	(rule__VMNodeElement__NameAssignment_2)
	{ after(grammarAccess.getVMNodeElementAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeElement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VMNodeElement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeElement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVMNodeElementAccess().getGroup_3()); }
	(rule__VMNodeElement__Group_3__0)?
	{ after(grammarAccess.getVMNodeElementAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VMNodeElement__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VMNodeElement__Group_3__0__Impl
	rule__VMNodeElement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeElement__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVMNodeElementAccess().getDefaultKeyword_3_0()); }
	'default'
	{ after(grammarAccess.getVMNodeElementAccess().getDefaultKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeElement__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VMNodeElement__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeElement__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVMNodeElementAccess().getDefaultvalueAssignment_3_1()); }
	(rule__VMNodeElement__DefaultvalueAssignment_3_1)
	{ after(grammarAccess.getVMNodeElementAccess().getDefaultvalueAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VMOverrideElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VMOverrideElement__Group__0__Impl
	rule__VMOverrideElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VMOverrideElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVMOverrideElementAccess().getPolicyAssignment_0()); }
	(rule__VMOverrideElement__PolicyAssignment_0)
	{ after(grammarAccess.getVMOverrideElementAccess().getPolicyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMOverrideElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VMOverrideElement__Group__1__Impl
	rule__VMOverrideElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VMOverrideElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVMOverrideElementAccess().getTypeAssignment_1()); }
	(rule__VMOverrideElement__TypeAssignment_1)
	{ after(grammarAccess.getVMOverrideElementAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMOverrideElement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VMOverrideElement__Group__2__Impl
	rule__VMOverrideElement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VMOverrideElement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVMOverrideElementAccess().getNameAssignment_2()); }
	(rule__VMOverrideElement__NameAssignment_2)
	{ after(grammarAccess.getVMOverrideElementAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMOverrideElement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VMOverrideElement__Group__3__Impl
	rule__VMOverrideElement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VMOverrideElement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVMOverrideElementAccess().getColonEqualsSignKeyword_3()); }
	':='
	{ after(grammarAccess.getVMOverrideElementAccess().getColonEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMOverrideElement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VMOverrideElement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VMOverrideElement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVMOverrideElementAccess().getDefaultvalueAssignment_4()); }
	(rule__VMOverrideElement__DefaultvalueAssignment_4)
	{ after(grammarAccess.getVMOverrideElementAccess().getDefaultvalueAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LlmTaskDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlmTaskDefinition__Group__0__Impl
	rule__LlmTaskDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LlmTaskDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlmTaskDefinitionAccess().getLlmtaskKeyword_0()); }
	'llmtask'
	{ after(grammarAccess.getLlmTaskDefinitionAccess().getLlmtaskKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlmTaskDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlmTaskDefinition__Group__1__Impl
	rule__LlmTaskDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LlmTaskDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlmTaskDefinitionAccess().getNameAssignment_1()); }
	(rule__LlmTaskDefinition__NameAssignment_1)
	{ after(grammarAccess.getLlmTaskDefinitionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlmTaskDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlmTaskDefinition__Group__2__Impl
	rule__LlmTaskDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LlmTaskDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlmTaskDefinitionAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getLlmTaskDefinitionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlmTaskDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlmTaskDefinition__Group__3__Impl
	rule__LlmTaskDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LlmTaskDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlmTaskDefinitionAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getLlmTaskDefinitionAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlmTaskDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlmTaskDefinition__Group__4__Impl
	rule__LlmTaskDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LlmTaskDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlmTaskDefinitionAccess().getGroup_4()); }
	(rule__LlmTaskDefinition__Group_4__0)?
	{ after(grammarAccess.getLlmTaskDefinitionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlmTaskDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlmTaskDefinition__Group__5__Impl
	rule__LlmTaskDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__LlmTaskDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlmTaskDefinitionAccess().getLeftCurlyBracketKeyword_5()); }
	'{'
	{ after(grammarAccess.getLlmTaskDefinitionAccess().getLeftCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlmTaskDefinition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlmTaskDefinition__Group__6__Impl
	rule__LlmTaskDefinition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__LlmTaskDefinition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlmTaskDefinitionAccess().getAssignmentAssignment_6()); }
	(rule__LlmTaskDefinition__AssignmentAssignment_6)*
	{ after(grammarAccess.getLlmTaskDefinitionAccess().getAssignmentAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlmTaskDefinition__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlmTaskDefinition__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LlmTaskDefinition__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlmTaskDefinitionAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getLlmTaskDefinitionAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LlmTaskDefinition__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlmTaskDefinition__Group_4__0__Impl
	rule__LlmTaskDefinition__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LlmTaskDefinition__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlmTaskDefinitionAccess().getImplementsKeyword_4_0()); }
	'implements'
	{ after(grammarAccess.getLlmTaskDefinitionAccess().getImplementsKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlmTaskDefinition__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlmTaskDefinition__Group_4__1__Impl
	rule__LlmTaskDefinition__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LlmTaskDefinition__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlmTaskDefinitionAccess().getAnnotation_interfacesAssignment_4_1()); }
	(rule__LlmTaskDefinition__Annotation_interfacesAssignment_4_1)
	{ after(grammarAccess.getLlmTaskDefinitionAccess().getAnnotation_interfacesAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlmTaskDefinition__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlmTaskDefinition__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LlmTaskDefinition__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlmTaskDefinitionAccess().getGroup_4_2()); }
	(rule__LlmTaskDefinition__Group_4_2__0)*
	{ after(grammarAccess.getLlmTaskDefinitionAccess().getGroup_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LlmTaskDefinition__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlmTaskDefinition__Group_4_2__0__Impl
	rule__LlmTaskDefinition__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LlmTaskDefinition__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlmTaskDefinitionAccess().getCommaKeyword_4_2_0()); }
	','
	{ after(grammarAccess.getLlmTaskDefinitionAccess().getCommaKeyword_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlmTaskDefinition__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlmTaskDefinition__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LlmTaskDefinition__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlmTaskDefinitionAccess().getAnnotation_interfacesAssignment_4_2_1()); }
	(rule__LlmTaskDefinition__Annotation_interfacesAssignment_4_2_1)
	{ after(grammarAccess.getLlmTaskDefinitionAccess().getAnnotation_interfacesAssignment_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationInterfaceReference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotationInterfaceReference__Group__0__Impl
	rule__AnnotationInterfaceReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationInterfaceReference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationInterfaceReferenceAccess().getCommercialAtKeyword_0()); }
	'@'
	{ after(grammarAccess.getAnnotationInterfaceReferenceAccess().getCommercialAtKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationInterfaceReference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotationInterfaceReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationInterfaceReference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationInterfaceReferenceAccess().getNameAssignment_1()); }
	(rule__AnnotationInterfaceReference__NameAssignment_1)
	{ after(grammarAccess.getAnnotationInterfaceReferenceAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LlmVariableAssignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlmVariableAssignment__Group__0__Impl
	rule__LlmVariableAssignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LlmVariableAssignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlmVariableAssignmentAccess().getVariablenameAssignment_0()); }
	(rule__LlmVariableAssignment__VariablenameAssignment_0)
	{ after(grammarAccess.getLlmVariableAssignmentAccess().getVariablenameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlmVariableAssignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlmVariableAssignment__Group__1__Impl
	rule__LlmVariableAssignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LlmVariableAssignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlmVariableAssignmentAccess().getColonEqualsSignKeyword_1()); }
	':='
	{ after(grammarAccess.getLlmVariableAssignmentAccess().getColonEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlmVariableAssignment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LlmVariableAssignment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LlmVariableAssignment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLlmVariableAssignmentAccess().getTemplateAssignment_2()); }
	(rule__LlmVariableAssignment__TemplateAssignment_2)
	{ after(grammarAccess.getLlmVariableAssignmentAccess().getTemplateAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WorkflowDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WorkflowDefinition__Group__0__Impl
	rule__WorkflowDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkflowDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowDefinitionAccess().getWorkflowKeyword_0()); }
	'workflow'
	{ after(grammarAccess.getWorkflowDefinitionAccess().getWorkflowKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkflowDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WorkflowDefinition__Group__1__Impl
	rule__WorkflowDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkflowDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowDefinitionAccess().getNameAssignment_1()); }
	(rule__WorkflowDefinition__NameAssignment_1)
	{ after(grammarAccess.getWorkflowDefinitionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkflowDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WorkflowDefinition__Group__2__Impl
	rule__WorkflowDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkflowDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowDefinitionAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getWorkflowDefinitionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkflowDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WorkflowDefinition__Group__3__Impl
	rule__WorkflowDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkflowDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowDefinitionAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getWorkflowDefinitionAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkflowDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WorkflowDefinition__Group__4__Impl
	rule__WorkflowDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkflowDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowDefinitionAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getWorkflowDefinitionAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkflowDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WorkflowDefinition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkflowDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkflowDefinitionAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getWorkflowDefinitionAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameWithWildcard__Group__0__Impl
	rule__QualifiedNameWithWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
	{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameWithWildcard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
	('.*')?
	{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Package_declarationAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getPackage_declarationPackageDeclarationParserRuleCall_0_0()); }
		rulePackageDeclaration
		{ after(grammarAccess.getModelAccess().getPackage_declarationPackageDeclarationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Import_declarationsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getImport_declarationsImportDeclarationParserRuleCall_1_0()); }
		ruleImportDeclaration
		{ after(grammarAccess.getModelAccess().getImport_declarationsImportDeclarationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__DefinitionsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getDefinitionsAlternatives_2_0()); }
		(rule__Model__DefinitionsAlternatives_2_0)
		{ after(grammarAccess.getModelAccess().getDefinitionsAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageDeclarationAccess().getNameQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getPackageDeclarationAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__ImportedNamespaceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportDeclarationAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
		ruleQualifiedNameWithWildcard
		{ after(grammarAccess.getImportDeclarationAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeDefinition__NodetypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVMNodeDefinitionAccess().getNodetypeAlternatives_1_0()); }
		(rule__VMNodeDefinition__NodetypeAlternatives_1_0)
		{ after(grammarAccess.getVMNodeDefinitionAccess().getNodetypeAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeDefinition__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVMNodeDefinitionAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getVMNodeDefinitionAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeDefinition__ElementsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVMNodeDefinitionAccess().getElementsVMNodeEleemntsParserRuleCall_4_0()); }
		ruleVMNodeEleemnts
		{ after(grammarAccess.getVMNodeDefinitionAccess().getElementsVMNodeEleemntsParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeOpCodeElement__CodeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVMNodeOpCodeElementAccess().getCodeSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getVMNodeOpCodeElementAccess().getCodeSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeOutElements__OutElementsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVMNodeOutElementsAccess().getOutElementsVMNodeOutElementParserRuleCall_3_0()); }
		ruleVMNodeOutElement
		{ after(grammarAccess.getVMNodeOutElementsAccess().getOutElementsVMNodeOutElementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeOutElement__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVMNodeOutElementAccess().getNameQualifiedNameParserRuleCall_0_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getVMNodeOutElementAccess().getNameQualifiedNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeOutElement__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVMNodeOutElementAccess().getTypeIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getVMNodeOutElementAccess().getTypeIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeOutElement__HasrequireAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVMNodeOutElementAccess().getHasrequireRequireKeyword_3_0_0()); }
		(
			{ before(grammarAccess.getVMNodeOutElementAccess().getHasrequireRequireKeyword_3_0_0()); }
			'require'
			{ after(grammarAccess.getVMNodeOutElementAccess().getHasrequireRequireKeyword_3_0_0()); }
		)
		{ after(grammarAccess.getVMNodeOutElementAccess().getHasrequireRequireKeyword_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeOutElement__InputreferenceAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVMNodeOutElementAccess().getInputreferenceQualifiedNameParserRuleCall_3_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getVMNodeOutElementAccess().getInputreferenceQualifiedNameParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeInElements__InElementsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVMNodeInElementsAccess().getInElementsVMNodeInElementParserRuleCall_3_0()); }
		ruleVMNodeInElement
		{ after(grammarAccess.getVMNodeInElementsAccess().getInElementsVMNodeInElementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeInElement__PolicyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVMNodeInElementAccess().getPolicyAlternatives_0_0()); }
		(rule__VMNodeInElement__PolicyAlternatives_0_0)
		{ after(grammarAccess.getVMNodeInElementAccess().getPolicyAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeInElement__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVMNodeInElementAccess().getNameQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getVMNodeInElementAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeElement__PolicyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVMNodeElementAccess().getPolicyAlternatives_0_0()); }
		(rule__VMNodeElement__PolicyAlternatives_0_0)
		{ after(grammarAccess.getVMNodeElementAccess().getPolicyAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeElement__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVMNodeElementAccess().getTypeIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVMNodeElementAccess().getTypeIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeElement__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVMNodeElementAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getVMNodeElementAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMNodeElement__DefaultvalueAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVMNodeElementAccess().getDefaultvalueSTRINGTerminalRuleCall_3_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getVMNodeElementAccess().getDefaultvalueSTRINGTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMOverrideElement__PolicyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVMOverrideElementAccess().getPolicyOverrideKeyword_0_0()); }
		(
			{ before(grammarAccess.getVMOverrideElementAccess().getPolicyOverrideKeyword_0_0()); }
			'override'
			{ after(grammarAccess.getVMOverrideElementAccess().getPolicyOverrideKeyword_0_0()); }
		)
		{ after(grammarAccess.getVMOverrideElementAccess().getPolicyOverrideKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMOverrideElement__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVMOverrideElementAccess().getTypeIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVMOverrideElementAccess().getTypeIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMOverrideElement__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVMOverrideElementAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getVMOverrideElementAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VMOverrideElement__DefaultvalueAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVMOverrideElementAccess().getDefaultvalueSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getVMOverrideElementAccess().getDefaultvalueSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlmTaskDefinition__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLlmTaskDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getLlmTaskDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlmTaskDefinition__Annotation_interfacesAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLlmTaskDefinitionAccess().getAnnotation_interfacesAnnotationInterfaceReferenceParserRuleCall_4_1_0()); }
		ruleAnnotationInterfaceReference
		{ after(grammarAccess.getLlmTaskDefinitionAccess().getAnnotation_interfacesAnnotationInterfaceReferenceParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlmTaskDefinition__Annotation_interfacesAssignment_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLlmTaskDefinitionAccess().getAnnotation_interfacesAnnotationInterfaceReferenceParserRuleCall_4_2_1_0()); }
		ruleAnnotationInterfaceReference
		{ after(grammarAccess.getLlmTaskDefinitionAccess().getAnnotation_interfacesAnnotationInterfaceReferenceParserRuleCall_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlmTaskDefinition__AssignmentAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLlmTaskDefinitionAccess().getAssignmentLlmVariableAssignmentParserRuleCall_6_0()); }
		ruleLlmVariableAssignment
		{ after(grammarAccess.getLlmTaskDefinitionAccess().getAssignmentLlmVariableAssignmentParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationInterfaceReference__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotationInterfaceReferenceAccess().getNameVMNodeDefinitionCrossReference_1_0()); }
		(
			{ before(grammarAccess.getAnnotationInterfaceReferenceAccess().getNameVMNodeDefinitionIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAnnotationInterfaceReferenceAccess().getNameVMNodeDefinitionIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getAnnotationInterfaceReferenceAccess().getNameVMNodeDefinitionCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlmVariableAssignment__VariablenameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLlmVariableAssignmentAccess().getVariablenameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getLlmVariableAssignmentAccess().getVariablenameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LlmVariableAssignment__TemplateAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLlmVariableAssignmentAccess().getTemplateSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getLlmVariableAssignmentAccess().getTemplateSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkflowDefinition__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWorkflowDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getWorkflowDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\''|'\'\'\'' ( options {greedy=false;} : . )*'\'\'\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
