/**
 * generated by Xtext 2.27.0
 */
package de.mindscan.ai.aidsl.aiDsl.impl;

import de.mindscan.ai.aidsl.aiDsl.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class AiDslFactoryImpl extends EFactoryImpl implements AiDslFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static AiDslFactory init()
  {
    try
    {
      AiDslFactory theAiDslFactory = (AiDslFactory)EPackage.Registry.INSTANCE.getEFactory(AiDslPackage.eNS_URI);
      if (theAiDslFactory != null)
      {
        return theAiDslFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new AiDslFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AiDslFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case AiDslPackage.MODEL: return createModel();
      case AiDslPackage.PACKAGE_DECLARATION: return createPackageDeclaration();
      case AiDslPackage.IMPORT_DECLARATION: return createImportDeclaration();
      case AiDslPackage.WORKFLOW_INPUT_DEFINITION: return createWorkflowInputDefinition();
      case AiDslPackage.WORKFLOW_UI_ELEMENT: return createWorkflowUIElement();
      case AiDslPackage.WORKFLOW_UI_ELEMENT_MAP: return createWorkflowUIElementMap();
      case AiDslPackage.WORKFLOW_DATA_DICTIONARY_DEFINITION: return createWorkflowDataDictionaryDefinition();
      case AiDslPackage.DATADICTIONARY_KEY_VALUE_PAIR: return createDatadictionaryKeyValuePair();
      case AiDslPackage.DATA_DICTIONARY_VALUE: return createDataDictionaryValue();
      case AiDslPackage.DATA_DICTIONARY_ARRAY_VALUE: return createDataDictionaryArrayValue();
      case AiDslPackage.DATA_DICTIONARY_MAP_VALUE: return createDataDictionaryMapValue();
      case AiDslPackage.DATA_DICTIONARY_BOOLEAN_VALUE: return createDataDictionaryBooleanValue();
      case AiDslPackage.DATA_DICTIONARY_STRING_VALUE: return createDataDictionaryStringValue();
      case AiDslPackage.DATA_DICTIONARY_NULL_VALUE: return createDataDictionaryNullValue();
      case AiDslPackage.VM_NODE_DEFINITION: return createVMNodeDefinition();
      case AiDslPackage.VM_NODE_ELEEMNTS: return createVMNodeEleemnts();
      case AiDslPackage.VM_NODE_OP_CODE_ELEMENT: return createVMNodeOpCodeElement();
      case AiDslPackage.VM_NODE_OUT_ELEMENTS: return createVMNodeOutElements();
      case AiDslPackage.VM_NODE_IN_ELEMENTS: return createVMNodeInElements();
      case AiDslPackage.VM_NODE_FIELD_ELEMENTS: return createVMNodeFieldElements();
      case AiDslPackage.VM_NODE_OUT_ELEMENT: return createVMNodeOutElement();
      case AiDslPackage.VM_NODE_IN_ELEMENT: return createVMNodeInElement();
      case AiDslPackage.VM_FIELD_ELEMENT: return createVMFieldElement();
      case AiDslPackage.VM_OVERRIDE_FIELD_ELEMENT: return createVMOverrideFieldElement();
      case AiDslPackage.LLM_TASK_DEFINITION: return createLlmTaskDefinition();
      case AiDslPackage.ANNOTATION_INTERFACE_REFERENCE: return createAnnotationInterfaceReference();
      case AiDslPackage.LLM_VARIABLE_ASSIGNMENT: return createLlmVariableAssignment();
      case AiDslPackage.WORKFLOW_DEFINITION: return createWorkflowDefinition();
      case AiDslPackage.WORKFLOW_DEFINITION_APPLY_LLM_TASK_STATEMENT: return createWorkflowDefinitionApplyLLMTaskStatement();
      case AiDslPackage.WORKFLOW_DEFINITION_APPLY_LLM_NODE_RESULT_ASSIGNMENT: return createWorkflowDefinitionApplyLLMNodeResultAssignment();
      case AiDslPackage.ELEMENTTYPE: return createELEMENTTYPE();
      case AiDslPackage.BASICTYPE: return createBASICTYPE();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Model createModel()
  {
    ModelImpl model = new ModelImpl();
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PackageDeclaration createPackageDeclaration()
  {
    PackageDeclarationImpl packageDeclaration = new PackageDeclarationImpl();
    return packageDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ImportDeclaration createImportDeclaration()
  {
    ImportDeclarationImpl importDeclaration = new ImportDeclarationImpl();
    return importDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public WorkflowInputDefinition createWorkflowInputDefinition()
  {
    WorkflowInputDefinitionImpl workflowInputDefinition = new WorkflowInputDefinitionImpl();
    return workflowInputDefinition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public WorkflowUIElement createWorkflowUIElement()
  {
    WorkflowUIElementImpl workflowUIElement = new WorkflowUIElementImpl();
    return workflowUIElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public WorkflowUIElementMap createWorkflowUIElementMap()
  {
    WorkflowUIElementMapImpl workflowUIElementMap = new WorkflowUIElementMapImpl();
    return workflowUIElementMap;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public WorkflowDataDictionaryDefinition createWorkflowDataDictionaryDefinition()
  {
    WorkflowDataDictionaryDefinitionImpl workflowDataDictionaryDefinition = new WorkflowDataDictionaryDefinitionImpl();
    return workflowDataDictionaryDefinition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DatadictionaryKeyValuePair createDatadictionaryKeyValuePair()
  {
    DatadictionaryKeyValuePairImpl datadictionaryKeyValuePair = new DatadictionaryKeyValuePairImpl();
    return datadictionaryKeyValuePair;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DataDictionaryValue createDataDictionaryValue()
  {
    DataDictionaryValueImpl dataDictionaryValue = new DataDictionaryValueImpl();
    return dataDictionaryValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DataDictionaryArrayValue createDataDictionaryArrayValue()
  {
    DataDictionaryArrayValueImpl dataDictionaryArrayValue = new DataDictionaryArrayValueImpl();
    return dataDictionaryArrayValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DataDictionaryMapValue createDataDictionaryMapValue()
  {
    DataDictionaryMapValueImpl dataDictionaryMapValue = new DataDictionaryMapValueImpl();
    return dataDictionaryMapValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DataDictionaryBooleanValue createDataDictionaryBooleanValue()
  {
    DataDictionaryBooleanValueImpl dataDictionaryBooleanValue = new DataDictionaryBooleanValueImpl();
    return dataDictionaryBooleanValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DataDictionaryStringValue createDataDictionaryStringValue()
  {
    DataDictionaryStringValueImpl dataDictionaryStringValue = new DataDictionaryStringValueImpl();
    return dataDictionaryStringValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DataDictionaryNullValue createDataDictionaryNullValue()
  {
    DataDictionaryNullValueImpl dataDictionaryNullValue = new DataDictionaryNullValueImpl();
    return dataDictionaryNullValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public VMNodeDefinition createVMNodeDefinition()
  {
    VMNodeDefinitionImpl vmNodeDefinition = new VMNodeDefinitionImpl();
    return vmNodeDefinition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public VMNodeEleemnts createVMNodeEleemnts()
  {
    VMNodeEleemntsImpl vmNodeEleemnts = new VMNodeEleemntsImpl();
    return vmNodeEleemnts;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public VMNodeOpCodeElement createVMNodeOpCodeElement()
  {
    VMNodeOpCodeElementImpl vmNodeOpCodeElement = new VMNodeOpCodeElementImpl();
    return vmNodeOpCodeElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public VMNodeOutElements createVMNodeOutElements()
  {
    VMNodeOutElementsImpl vmNodeOutElements = new VMNodeOutElementsImpl();
    return vmNodeOutElements;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public VMNodeInElements createVMNodeInElements()
  {
    VMNodeInElementsImpl vmNodeInElements = new VMNodeInElementsImpl();
    return vmNodeInElements;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public VMNodeFieldElements createVMNodeFieldElements()
  {
    VMNodeFieldElementsImpl vmNodeFieldElements = new VMNodeFieldElementsImpl();
    return vmNodeFieldElements;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public VMNodeOutElement createVMNodeOutElement()
  {
    VMNodeOutElementImpl vmNodeOutElement = new VMNodeOutElementImpl();
    return vmNodeOutElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public VMNodeInElement createVMNodeInElement()
  {
    VMNodeInElementImpl vmNodeInElement = new VMNodeInElementImpl();
    return vmNodeInElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public VMFieldElement createVMFieldElement()
  {
    VMFieldElementImpl vmFieldElement = new VMFieldElementImpl();
    return vmFieldElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public VMOverrideFieldElement createVMOverrideFieldElement()
  {
    VMOverrideFieldElementImpl vmOverrideFieldElement = new VMOverrideFieldElementImpl();
    return vmOverrideFieldElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LlmTaskDefinition createLlmTaskDefinition()
  {
    LlmTaskDefinitionImpl llmTaskDefinition = new LlmTaskDefinitionImpl();
    return llmTaskDefinition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AnnotationInterfaceReference createAnnotationInterfaceReference()
  {
    AnnotationInterfaceReferenceImpl annotationInterfaceReference = new AnnotationInterfaceReferenceImpl();
    return annotationInterfaceReference;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LlmVariableAssignment createLlmVariableAssignment()
  {
    LlmVariableAssignmentImpl llmVariableAssignment = new LlmVariableAssignmentImpl();
    return llmVariableAssignment;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public WorkflowDefinition createWorkflowDefinition()
  {
    WorkflowDefinitionImpl workflowDefinition = new WorkflowDefinitionImpl();
    return workflowDefinition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public WorkflowDefinitionApplyLLMTaskStatement createWorkflowDefinitionApplyLLMTaskStatement()
  {
    WorkflowDefinitionApplyLLMTaskStatementImpl workflowDefinitionApplyLLMTaskStatement = new WorkflowDefinitionApplyLLMTaskStatementImpl();
    return workflowDefinitionApplyLLMTaskStatement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public WorkflowDefinitionApplyLLMNodeResultAssignment createWorkflowDefinitionApplyLLMNodeResultAssignment()
  {
    WorkflowDefinitionApplyLLMNodeResultAssignmentImpl workflowDefinitionApplyLLMNodeResultAssignment = new WorkflowDefinitionApplyLLMNodeResultAssignmentImpl();
    return workflowDefinitionApplyLLMNodeResultAssignment;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ELEMENTTYPE createELEMENTTYPE()
  {
    ELEMENTTYPEImpl elementtype = new ELEMENTTYPEImpl();
    return elementtype;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BASICTYPE createBASICTYPE()
  {
    BASICTYPEImpl basictype = new BASICTYPEImpl();
    return basictype;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AiDslPackage getAiDslPackage()
  {
    return (AiDslPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static AiDslPackage getPackage()
  {
    return AiDslPackage.eINSTANCE;
  }

} //AiDslFactoryImpl
