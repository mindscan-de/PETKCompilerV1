/**
 * generated by Xtext 2.27.0
 */
package de.mindscan.ai.aidsl.aiDsl.impl;

import de.mindscan.ai.aidsl.aiDsl.AiDslFactory;
import de.mindscan.ai.aidsl.aiDsl.AiDslPackage;
import de.mindscan.ai.aidsl.aiDsl.AnnotationInterfaceReference;
import de.mindscan.ai.aidsl.aiDsl.DataDictionaryArrayValue;
import de.mindscan.ai.aidsl.aiDsl.DataDictionaryBooleanValue;
import de.mindscan.ai.aidsl.aiDsl.DataDictionaryMapValue;
import de.mindscan.ai.aidsl.aiDsl.DataDictionaryNullValue;
import de.mindscan.ai.aidsl.aiDsl.DataDictionaryStringValue;
import de.mindscan.ai.aidsl.aiDsl.DataDictionaryValue;
import de.mindscan.ai.aidsl.aiDsl.DatadictionaryKeyValuePair;
import de.mindscan.ai.aidsl.aiDsl.ImportDeclaration;
import de.mindscan.ai.aidsl.aiDsl.LlmTaskDefinition;
import de.mindscan.ai.aidsl.aiDsl.LlmVariableAssignment;
import de.mindscan.ai.aidsl.aiDsl.Model;
import de.mindscan.ai.aidsl.aiDsl.PackageDeclaration;
import de.mindscan.ai.aidsl.aiDsl.SAIAssignment;
import de.mindscan.ai.aidsl.aiDsl.SAIBlock;
import de.mindscan.ai.aidsl.aiDsl.SAIBoolConstant;
import de.mindscan.ai.aidsl.aiDsl.SAIExpression;
import de.mindscan.ai.aidsl.aiDsl.SAIField;
import de.mindscan.ai.aidsl.aiDsl.SAIIfBlock;
import de.mindscan.ai.aidsl.aiDsl.SAIIfStatement;
import de.mindscan.ai.aidsl.aiDsl.SAIIntConstant;
import de.mindscan.ai.aidsl.aiDsl.SAIMember;
import de.mindscan.ai.aidsl.aiDsl.SAIMemberSelection;
import de.mindscan.ai.aidsl.aiDsl.SAIMethod;
import de.mindscan.ai.aidsl.aiDsl.SAINull;
import de.mindscan.ai.aidsl.aiDsl.SAIParameter;
import de.mindscan.ai.aidsl.aiDsl.SAIReturn;
import de.mindscan.ai.aidsl.aiDsl.SAIStatement;
import de.mindscan.ai.aidsl.aiDsl.SAIStringConstant;
import de.mindscan.ai.aidsl.aiDsl.SAIVariableDeclaration;
import de.mindscan.ai.aidsl.aiDsl.VMFieldElement;
import de.mindscan.ai.aidsl.aiDsl.VMNodeDefinition;
import de.mindscan.ai.aidsl.aiDsl.VMNodeEleemnts;
import de.mindscan.ai.aidsl.aiDsl.VMNodeFieldElements;
import de.mindscan.ai.aidsl.aiDsl.VMNodeInElement;
import de.mindscan.ai.aidsl.aiDsl.VMNodeInElements;
import de.mindscan.ai.aidsl.aiDsl.VMNodeOpCodeElement;
import de.mindscan.ai.aidsl.aiDsl.VMNodeOutElement;
import de.mindscan.ai.aidsl.aiDsl.VMNodeOutElements;
import de.mindscan.ai.aidsl.aiDsl.VMOverrideFieldElement;
import de.mindscan.ai.aidsl.aiDsl.WorkflowDataDictionaryDefinition;
import de.mindscan.ai.aidsl.aiDsl.WorkflowDefinition;
import de.mindscan.ai.aidsl.aiDsl.WorkflowDefinitionApplyLLMNodeResultAssignment;
import de.mindscan.ai.aidsl.aiDsl.WorkflowDefinitionApplyLLMTaskStatement;
import de.mindscan.ai.aidsl.aiDsl.WorkflowFunctionsDefinition;
import de.mindscan.ai.aidsl.aiDsl.WorkflowIfStatement;
import de.mindscan.ai.aidsl.aiDsl.WorkflowInputDefinition;
import de.mindscan.ai.aidsl.aiDsl.WorkflowUIElement;
import de.mindscan.ai.aidsl.aiDsl.WorkflowUIElementMap;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class AiDslPackageImpl extends EPackageImpl implements AiDslPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass modelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass workflowFunctionsDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass saiMemberEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass saiFieldEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass saiMethodEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass saiParameterEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass saiBlockEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass saiStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass saiVariableDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass saiReturnEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass saiIfStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass saiIfBlockEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass saiExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass packageDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass importDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass workflowInputDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass workflowUIElementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass workflowUIElementMapEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass workflowDataDictionaryDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass datadictionaryKeyValuePairEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dataDictionaryValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dataDictionaryArrayValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dataDictionaryMapValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dataDictionaryBooleanValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dataDictionaryStringValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dataDictionaryNullValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass vmNodeDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass vmNodeEleemntsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass vmNodeOpCodeElementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass vmNodeOutElementsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass vmNodeInElementsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass vmNodeFieldElementsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass vmNodeOutElementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass vmNodeInElementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass vmFieldElementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass vmOverrideFieldElementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass llmTaskDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass annotationInterfaceReferenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass llmVariableAssignmentEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass workflowDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass workflowIfStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass workflowDefinitionApplyLLMTaskStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass workflowDefinitionApplyLLMNodeResultAssignmentEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass elementtypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass basictypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass saiAssignmentEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass saiMemberSelectionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass saiStringConstantEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass saiIntConstantEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass saiBoolConstantEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass saiNullEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see de.mindscan.ai.aidsl.aiDsl.AiDslPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private AiDslPackageImpl()
  {
    super(eNS_URI, AiDslFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link AiDslPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static AiDslPackage init()
  {
    if (isInited) return (AiDslPackage)EPackage.Registry.INSTANCE.getEPackage(AiDslPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredAiDslPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    AiDslPackageImpl theAiDslPackage = registeredAiDslPackage instanceof AiDslPackageImpl ? (AiDslPackageImpl)registeredAiDslPackage : new AiDslPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theAiDslPackage.createPackageContents();

    // Initialize created meta-data
    theAiDslPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theAiDslPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(AiDslPackage.eNS_URI, theAiDslPackage);
    return theAiDslPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getModel()
  {
    return modelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getModel_Package_declaration()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getModel_Import_declarations()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getModel_Definitions()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getWorkflowFunctionsDefinition()
  {
    return workflowFunctionsDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getWorkflowFunctionsDefinition_Name()
  {
    return (EAttribute)workflowFunctionsDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getWorkflowFunctionsDefinition_Members()
  {
    return (EReference)workflowFunctionsDefinitionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSAIMember()
  {
    return saiMemberEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSAIMember_Type()
  {
    return (EReference)saiMemberEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSAIMember_Name()
  {
    return (EAttribute)saiMemberEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSAIField()
  {
    return saiFieldEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSAIMethod()
  {
    return saiMethodEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSAIMethod_Params()
  {
    return (EReference)saiMethodEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSAIMethod_Body()
  {
    return (EReference)saiMethodEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSAIParameter()
  {
    return saiParameterEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSAIParameter_Type()
  {
    return (EReference)saiParameterEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSAIParameter_Name()
  {
    return (EAttribute)saiParameterEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSAIBlock()
  {
    return saiBlockEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSAIStatement()
  {
    return saiStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSAIVariableDeclaration()
  {
    return saiVariableDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSAIVariableDeclaration_Type()
  {
    return (EReference)saiVariableDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSAIVariableDeclaration_Name()
  {
    return (EAttribute)saiVariableDeclarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSAIVariableDeclaration_Expression()
  {
    return (EReference)saiVariableDeclarationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSAIReturn()
  {
    return saiReturnEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSAIReturn_Expression()
  {
    return (EReference)saiReturnEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSAIIfStatement()
  {
    return saiIfStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSAIIfStatement_Expression()
  {
    return (EReference)saiIfStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSAIIfStatement_Thenblock()
  {
    return (EReference)saiIfStatementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSAIIfStatement_ElseBlock()
  {
    return (EReference)saiIfStatementEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSAIIfBlock()
  {
    return saiIfBlockEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSAIIfBlock_Statements()
  {
    return (EReference)saiIfBlockEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSAIExpression()
  {
    return saiExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPackageDeclaration()
  {
    return packageDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPackageDeclaration_Name()
  {
    return (EAttribute)packageDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getImportDeclaration()
  {
    return importDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getImportDeclaration_ImportedNamespace()
  {
    return (EAttribute)importDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getWorkflowInputDefinition()
  {
    return workflowInputDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getWorkflowInputDefinition_Name()
  {
    return (EAttribute)workflowInputDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getWorkflowInputDefinition_UiElements()
  {
    return (EReference)workflowInputDefinitionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getWorkflowUIElement()
  {
    return workflowUIElementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getWorkflowUIElement_Name()
  {
    return (EAttribute)workflowUIElementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getWorkflowUIElement_Datatype()
  {
    return (EReference)workflowUIElementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getWorkflowUIElement_Uielement()
  {
    return (EReference)workflowUIElementEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getWorkflowUIElementMap()
  {
    return workflowUIElementMapEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getWorkflowUIElementMap_Label()
  {
    return (EAttribute)workflowUIElementMapEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getWorkflowUIElementMap_Uitype()
  {
    return (EAttribute)workflowUIElementMapEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getWorkflowUIElementMap_Defaultvalue()
  {
    return (EReference)workflowUIElementMapEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getWorkflowUIElementMap_Options()
  {
    return (EReference)workflowUIElementMapEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getWorkflowDataDictionaryDefinition()
  {
    return workflowDataDictionaryDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getWorkflowDataDictionaryDefinition_Name()
  {
    return (EAttribute)workflowDataDictionaryDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getWorkflowDataDictionaryDefinition_KeyValuePairs()
  {
    return (EReference)workflowDataDictionaryDefinitionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDatadictionaryKeyValuePair()
  {
    return datadictionaryKeyValuePairEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDatadictionaryKeyValuePair_Name()
  {
    return (EAttribute)datadictionaryKeyValuePairEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDatadictionaryKeyValuePair_Extends()
  {
    return (EReference)datadictionaryKeyValuePairEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDatadictionaryKeyValuePair_Value()
  {
    return (EReference)datadictionaryKeyValuePairEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDataDictionaryValue()
  {
    return dataDictionaryValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDataDictionaryValue_Value()
  {
    return (EReference)dataDictionaryValueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDataDictionaryArrayValue()
  {
    return dataDictionaryArrayValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDataDictionaryArrayValue_Values()
  {
    return (EAttribute)dataDictionaryArrayValueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDataDictionaryMapValue()
  {
    return dataDictionaryMapValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDataDictionaryMapValue_KeyValuePairs()
  {
    return (EReference)dataDictionaryMapValueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDataDictionaryBooleanValue()
  {
    return dataDictionaryBooleanValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDataDictionaryBooleanValue_Value()
  {
    return (EAttribute)dataDictionaryBooleanValueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDataDictionaryStringValue()
  {
    return dataDictionaryStringValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDataDictionaryStringValue_Value()
  {
    return (EAttribute)dataDictionaryStringValueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDataDictionaryNullValue()
  {
    return dataDictionaryNullValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDataDictionaryNullValue_Value()
  {
    return (EAttribute)dataDictionaryNullValueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getVMNodeDefinition()
  {
    return vmNodeDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getVMNodeDefinition_Nodetype()
  {
    return (EAttribute)vmNodeDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getVMNodeDefinition_Name()
  {
    return (EAttribute)vmNodeDefinitionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getVMNodeDefinition_Elements()
  {
    return (EReference)vmNodeDefinitionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getVMNodeEleemnts()
  {
    return vmNodeEleemntsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getVMNodeOpCodeElement()
  {
    return vmNodeOpCodeElementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getVMNodeOpCodeElement_Opcode()
  {
    return (EAttribute)vmNodeOpCodeElementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getVMNodeOutElements()
  {
    return vmNodeOutElementsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getVMNodeOutElements_OutElements()
  {
    return (EReference)vmNodeOutElementsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getVMNodeInElements()
  {
    return vmNodeInElementsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getVMNodeInElements_InElements()
  {
    return (EReference)vmNodeInElementsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getVMNodeFieldElements()
  {
    return vmNodeFieldElementsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getVMNodeFieldElements_FieldELements()
  {
    return (EReference)vmNodeFieldElementsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getVMNodeOutElement()
  {
    return vmNodeOutElementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getVMNodeOutElement_Name()
  {
    return (EAttribute)vmNodeOutElementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getVMNodeOutElement_Type()
  {
    return (EReference)vmNodeOutElementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getVMNodeOutElement_Hasrequire()
  {
    return (EAttribute)vmNodeOutElementEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getVMNodeOutElement_Inputreference()
  {
    return (EReference)vmNodeOutElementEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getVMNodeInElement()
  {
    return vmNodeInElementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getVMNodeInElement_Policy()
  {
    return (EAttribute)vmNodeInElementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getVMNodeInElement_Name()
  {
    return (EAttribute)vmNodeInElementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getVMFieldElement()
  {
    return vmFieldElementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getVMFieldElement_Policy()
  {
    return (EAttribute)vmFieldElementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getVMFieldElement_Type()
  {
    return (EReference)vmFieldElementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getVMFieldElement_Name()
  {
    return (EAttribute)vmFieldElementEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getVMFieldElement_Defaultvalue()
  {
    return (EReference)vmFieldElementEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getVMOverrideFieldElement()
  {
    return vmOverrideFieldElementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getVMOverrideFieldElement_Policy()
  {
    return (EAttribute)vmOverrideFieldElementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getVMOverrideFieldElement_Type()
  {
    return (EReference)vmOverrideFieldElementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getVMOverrideFieldElement_Name()
  {
    return (EAttribute)vmOverrideFieldElementEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getVMOverrideFieldElement_Defaultvalue()
  {
    return (EAttribute)vmOverrideFieldElementEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLlmTaskDefinition()
  {
    return llmTaskDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLlmTaskDefinition_Name()
  {
    return (EAttribute)llmTaskDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLlmTaskDefinition_Annotation_interfaces()
  {
    return (EReference)llmTaskDefinitionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLlmTaskDefinition_Assignments()
  {
    return (EReference)llmTaskDefinitionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAnnotationInterfaceReference()
  {
    return annotationInterfaceReferenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAnnotationInterfaceReference_Name()
  {
    return (EReference)annotationInterfaceReferenceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLlmVariableAssignment()
  {
    return llmVariableAssignmentEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLlmVariableAssignment_Variablename()
  {
    return (EAttribute)llmVariableAssignmentEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLlmVariableAssignment_Template()
  {
    return (EReference)llmVariableAssignmentEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getWorkflowDefinition()
  {
    return workflowDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getWorkflowDefinition_Name()
  {
    return (EAttribute)workflowDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getWorkflowDefinition_Input()
  {
    return (EReference)workflowDefinitionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getWorkflowDefinition_Datadictionary()
  {
    return (EReference)workflowDefinitionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getWorkflowDefinition_Statements()
  {
    return (EReference)workflowDefinitionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getWorkflowIfStatement()
  {
    return workflowIfStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getWorkflowIfStatement_Condition()
  {
    return (EAttribute)workflowIfStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getWorkflowIfStatement_ElsePresent()
  {
    return (EAttribute)workflowIfStatementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getWorkflowDefinitionApplyLLMTaskStatement()
  {
    return workflowDefinitionApplyLLMTaskStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getWorkflowDefinitionApplyLLMTaskStatement_Llmtask()
  {
    return (EReference)workflowDefinitionApplyLLMTaskStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getWorkflowDefinitionApplyLLMTaskStatement_Noderesultassigments()
  {
    return (EReference)workflowDefinitionApplyLLMTaskStatementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getWorkflowDefinitionApplyLLMNodeResultAssignment()
  {
    return workflowDefinitionApplyLLMNodeResultAssignmentEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getWorkflowDefinitionApplyLLMNodeResultAssignment_Environmentresultname()
  {
    return (EAttribute)workflowDefinitionApplyLLMNodeResultAssignmentEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getWorkflowDefinitionApplyLLMNodeResultAssignment_Noderesultname()
  {
    return (EAttribute)workflowDefinitionApplyLLMNodeResultAssignmentEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getELEMENTTYPE()
  {
    return elementtypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBASICTYPE()
  {
    return basictypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBASICTYPE_IsArray()
  {
    return (EAttribute)basictypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBASICTYPE_Typename()
  {
    return (EAttribute)basictypeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSAIAssignment()
  {
    return saiAssignmentEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSAIAssignment_Left()
  {
    return (EReference)saiAssignmentEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSAIAssignment_Right()
  {
    return (EReference)saiAssignmentEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSAIMemberSelection()
  {
    return saiMemberSelectionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSAIMemberSelection_Receiver()
  {
    return (EReference)saiMemberSelectionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSAIMemberSelection_Member()
  {
    return (EReference)saiMemberSelectionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSAIMemberSelection_Methodinvocation()
  {
    return (EAttribute)saiMemberSelectionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSAIMemberSelection_Args()
  {
    return (EReference)saiMemberSelectionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSAIStringConstant()
  {
    return saiStringConstantEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSAIStringConstant_Value()
  {
    return (EAttribute)saiStringConstantEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSAIIntConstant()
  {
    return saiIntConstantEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSAIIntConstant_Value()
  {
    return (EAttribute)saiIntConstantEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSAIBoolConstant()
  {
    return saiBoolConstantEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSAIBoolConstant_Value()
  {
    return (EAttribute)saiBoolConstantEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSAINull()
  {
    return saiNullEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AiDslFactory getAiDslFactory()
  {
    return (AiDslFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    modelEClass = createEClass(MODEL);
    createEReference(modelEClass, MODEL__PACKAGE_DECLARATION);
    createEReference(modelEClass, MODEL__IMPORT_DECLARATIONS);
    createEReference(modelEClass, MODEL__DEFINITIONS);

    workflowFunctionsDefinitionEClass = createEClass(WORKFLOW_FUNCTIONS_DEFINITION);
    createEAttribute(workflowFunctionsDefinitionEClass, WORKFLOW_FUNCTIONS_DEFINITION__NAME);
    createEReference(workflowFunctionsDefinitionEClass, WORKFLOW_FUNCTIONS_DEFINITION__MEMBERS);

    saiMemberEClass = createEClass(SAI_MEMBER);
    createEReference(saiMemberEClass, SAI_MEMBER__TYPE);
    createEAttribute(saiMemberEClass, SAI_MEMBER__NAME);

    saiFieldEClass = createEClass(SAI_FIELD);

    saiMethodEClass = createEClass(SAI_METHOD);
    createEReference(saiMethodEClass, SAI_METHOD__PARAMS);
    createEReference(saiMethodEClass, SAI_METHOD__BODY);

    saiParameterEClass = createEClass(SAI_PARAMETER);
    createEReference(saiParameterEClass, SAI_PARAMETER__TYPE);
    createEAttribute(saiParameterEClass, SAI_PARAMETER__NAME);

    saiBlockEClass = createEClass(SAI_BLOCK);

    saiStatementEClass = createEClass(SAI_STATEMENT);

    saiVariableDeclarationEClass = createEClass(SAI_VARIABLE_DECLARATION);
    createEReference(saiVariableDeclarationEClass, SAI_VARIABLE_DECLARATION__TYPE);
    createEAttribute(saiVariableDeclarationEClass, SAI_VARIABLE_DECLARATION__NAME);
    createEReference(saiVariableDeclarationEClass, SAI_VARIABLE_DECLARATION__EXPRESSION);

    saiReturnEClass = createEClass(SAI_RETURN);
    createEReference(saiReturnEClass, SAI_RETURN__EXPRESSION);

    saiIfStatementEClass = createEClass(SAI_IF_STATEMENT);
    createEReference(saiIfStatementEClass, SAI_IF_STATEMENT__EXPRESSION);
    createEReference(saiIfStatementEClass, SAI_IF_STATEMENT__THENBLOCK);
    createEReference(saiIfStatementEClass, SAI_IF_STATEMENT__ELSE_BLOCK);

    saiIfBlockEClass = createEClass(SAI_IF_BLOCK);
    createEReference(saiIfBlockEClass, SAI_IF_BLOCK__STATEMENTS);

    saiExpressionEClass = createEClass(SAI_EXPRESSION);

    packageDeclarationEClass = createEClass(PACKAGE_DECLARATION);
    createEAttribute(packageDeclarationEClass, PACKAGE_DECLARATION__NAME);

    importDeclarationEClass = createEClass(IMPORT_DECLARATION);
    createEAttribute(importDeclarationEClass, IMPORT_DECLARATION__IMPORTED_NAMESPACE);

    workflowInputDefinitionEClass = createEClass(WORKFLOW_INPUT_DEFINITION);
    createEAttribute(workflowInputDefinitionEClass, WORKFLOW_INPUT_DEFINITION__NAME);
    createEReference(workflowInputDefinitionEClass, WORKFLOW_INPUT_DEFINITION__UI_ELEMENTS);

    workflowUIElementEClass = createEClass(WORKFLOW_UI_ELEMENT);
    createEAttribute(workflowUIElementEClass, WORKFLOW_UI_ELEMENT__NAME);
    createEReference(workflowUIElementEClass, WORKFLOW_UI_ELEMENT__DATATYPE);
    createEReference(workflowUIElementEClass, WORKFLOW_UI_ELEMENT__UIELEMENT);

    workflowUIElementMapEClass = createEClass(WORKFLOW_UI_ELEMENT_MAP);
    createEAttribute(workflowUIElementMapEClass, WORKFLOW_UI_ELEMENT_MAP__LABEL);
    createEAttribute(workflowUIElementMapEClass, WORKFLOW_UI_ELEMENT_MAP__UITYPE);
    createEReference(workflowUIElementMapEClass, WORKFLOW_UI_ELEMENT_MAP__DEFAULTVALUE);
    createEReference(workflowUIElementMapEClass, WORKFLOW_UI_ELEMENT_MAP__OPTIONS);

    workflowDataDictionaryDefinitionEClass = createEClass(WORKFLOW_DATA_DICTIONARY_DEFINITION);
    createEAttribute(workflowDataDictionaryDefinitionEClass, WORKFLOW_DATA_DICTIONARY_DEFINITION__NAME);
    createEReference(workflowDataDictionaryDefinitionEClass, WORKFLOW_DATA_DICTIONARY_DEFINITION__KEY_VALUE_PAIRS);

    datadictionaryKeyValuePairEClass = createEClass(DATADICTIONARY_KEY_VALUE_PAIR);
    createEAttribute(datadictionaryKeyValuePairEClass, DATADICTIONARY_KEY_VALUE_PAIR__NAME);
    createEReference(datadictionaryKeyValuePairEClass, DATADICTIONARY_KEY_VALUE_PAIR__EXTENDS);
    createEReference(datadictionaryKeyValuePairEClass, DATADICTIONARY_KEY_VALUE_PAIR__VALUE);

    dataDictionaryValueEClass = createEClass(DATA_DICTIONARY_VALUE);
    createEReference(dataDictionaryValueEClass, DATA_DICTIONARY_VALUE__VALUE);

    dataDictionaryArrayValueEClass = createEClass(DATA_DICTIONARY_ARRAY_VALUE);
    createEAttribute(dataDictionaryArrayValueEClass, DATA_DICTIONARY_ARRAY_VALUE__VALUES);

    dataDictionaryMapValueEClass = createEClass(DATA_DICTIONARY_MAP_VALUE);
    createEReference(dataDictionaryMapValueEClass, DATA_DICTIONARY_MAP_VALUE__KEY_VALUE_PAIRS);

    dataDictionaryBooleanValueEClass = createEClass(DATA_DICTIONARY_BOOLEAN_VALUE);
    createEAttribute(dataDictionaryBooleanValueEClass, DATA_DICTIONARY_BOOLEAN_VALUE__VALUE);

    dataDictionaryStringValueEClass = createEClass(DATA_DICTIONARY_STRING_VALUE);
    createEAttribute(dataDictionaryStringValueEClass, DATA_DICTIONARY_STRING_VALUE__VALUE);

    dataDictionaryNullValueEClass = createEClass(DATA_DICTIONARY_NULL_VALUE);
    createEAttribute(dataDictionaryNullValueEClass, DATA_DICTIONARY_NULL_VALUE__VALUE);

    vmNodeDefinitionEClass = createEClass(VM_NODE_DEFINITION);
    createEAttribute(vmNodeDefinitionEClass, VM_NODE_DEFINITION__NODETYPE);
    createEAttribute(vmNodeDefinitionEClass, VM_NODE_DEFINITION__NAME);
    createEReference(vmNodeDefinitionEClass, VM_NODE_DEFINITION__ELEMENTS);

    vmNodeEleemntsEClass = createEClass(VM_NODE_ELEEMNTS);

    vmNodeOpCodeElementEClass = createEClass(VM_NODE_OP_CODE_ELEMENT);
    createEAttribute(vmNodeOpCodeElementEClass, VM_NODE_OP_CODE_ELEMENT__OPCODE);

    vmNodeOutElementsEClass = createEClass(VM_NODE_OUT_ELEMENTS);
    createEReference(vmNodeOutElementsEClass, VM_NODE_OUT_ELEMENTS__OUT_ELEMENTS);

    vmNodeInElementsEClass = createEClass(VM_NODE_IN_ELEMENTS);
    createEReference(vmNodeInElementsEClass, VM_NODE_IN_ELEMENTS__IN_ELEMENTS);

    vmNodeFieldElementsEClass = createEClass(VM_NODE_FIELD_ELEMENTS);
    createEReference(vmNodeFieldElementsEClass, VM_NODE_FIELD_ELEMENTS__FIELD_ELEMENTS);

    vmNodeOutElementEClass = createEClass(VM_NODE_OUT_ELEMENT);
    createEAttribute(vmNodeOutElementEClass, VM_NODE_OUT_ELEMENT__NAME);
    createEReference(vmNodeOutElementEClass, VM_NODE_OUT_ELEMENT__TYPE);
    createEAttribute(vmNodeOutElementEClass, VM_NODE_OUT_ELEMENT__HASREQUIRE);
    createEReference(vmNodeOutElementEClass, VM_NODE_OUT_ELEMENT__INPUTREFERENCE);

    vmNodeInElementEClass = createEClass(VM_NODE_IN_ELEMENT);
    createEAttribute(vmNodeInElementEClass, VM_NODE_IN_ELEMENT__POLICY);
    createEAttribute(vmNodeInElementEClass, VM_NODE_IN_ELEMENT__NAME);

    vmFieldElementEClass = createEClass(VM_FIELD_ELEMENT);
    createEAttribute(vmFieldElementEClass, VM_FIELD_ELEMENT__POLICY);
    createEReference(vmFieldElementEClass, VM_FIELD_ELEMENT__TYPE);
    createEAttribute(vmFieldElementEClass, VM_FIELD_ELEMENT__NAME);
    createEReference(vmFieldElementEClass, VM_FIELD_ELEMENT__DEFAULTVALUE);

    vmOverrideFieldElementEClass = createEClass(VM_OVERRIDE_FIELD_ELEMENT);
    createEAttribute(vmOverrideFieldElementEClass, VM_OVERRIDE_FIELD_ELEMENT__POLICY);
    createEReference(vmOverrideFieldElementEClass, VM_OVERRIDE_FIELD_ELEMENT__TYPE);
    createEAttribute(vmOverrideFieldElementEClass, VM_OVERRIDE_FIELD_ELEMENT__NAME);
    createEAttribute(vmOverrideFieldElementEClass, VM_OVERRIDE_FIELD_ELEMENT__DEFAULTVALUE);

    llmTaskDefinitionEClass = createEClass(LLM_TASK_DEFINITION);
    createEAttribute(llmTaskDefinitionEClass, LLM_TASK_DEFINITION__NAME);
    createEReference(llmTaskDefinitionEClass, LLM_TASK_DEFINITION__ANNOTATION_INTERFACES);
    createEReference(llmTaskDefinitionEClass, LLM_TASK_DEFINITION__ASSIGNMENTS);

    annotationInterfaceReferenceEClass = createEClass(ANNOTATION_INTERFACE_REFERENCE);
    createEReference(annotationInterfaceReferenceEClass, ANNOTATION_INTERFACE_REFERENCE__NAME);

    llmVariableAssignmentEClass = createEClass(LLM_VARIABLE_ASSIGNMENT);
    createEAttribute(llmVariableAssignmentEClass, LLM_VARIABLE_ASSIGNMENT__VARIABLENAME);
    createEReference(llmVariableAssignmentEClass, LLM_VARIABLE_ASSIGNMENT__TEMPLATE);

    workflowDefinitionEClass = createEClass(WORKFLOW_DEFINITION);
    createEAttribute(workflowDefinitionEClass, WORKFLOW_DEFINITION__NAME);
    createEReference(workflowDefinitionEClass, WORKFLOW_DEFINITION__INPUT);
    createEReference(workflowDefinitionEClass, WORKFLOW_DEFINITION__DATADICTIONARY);
    createEReference(workflowDefinitionEClass, WORKFLOW_DEFINITION__STATEMENTS);

    workflowIfStatementEClass = createEClass(WORKFLOW_IF_STATEMENT);
    createEAttribute(workflowIfStatementEClass, WORKFLOW_IF_STATEMENT__CONDITION);
    createEAttribute(workflowIfStatementEClass, WORKFLOW_IF_STATEMENT__ELSE_PRESENT);

    workflowDefinitionApplyLLMTaskStatementEClass = createEClass(WORKFLOW_DEFINITION_APPLY_LLM_TASK_STATEMENT);
    createEReference(workflowDefinitionApplyLLMTaskStatementEClass, WORKFLOW_DEFINITION_APPLY_LLM_TASK_STATEMENT__LLMTASK);
    createEReference(workflowDefinitionApplyLLMTaskStatementEClass, WORKFLOW_DEFINITION_APPLY_LLM_TASK_STATEMENT__NODERESULTASSIGMENTS);

    workflowDefinitionApplyLLMNodeResultAssignmentEClass = createEClass(WORKFLOW_DEFINITION_APPLY_LLM_NODE_RESULT_ASSIGNMENT);
    createEAttribute(workflowDefinitionApplyLLMNodeResultAssignmentEClass, WORKFLOW_DEFINITION_APPLY_LLM_NODE_RESULT_ASSIGNMENT__ENVIRONMENTRESULTNAME);
    createEAttribute(workflowDefinitionApplyLLMNodeResultAssignmentEClass, WORKFLOW_DEFINITION_APPLY_LLM_NODE_RESULT_ASSIGNMENT__NODERESULTNAME);

    elementtypeEClass = createEClass(ELEMENTTYPE);

    basictypeEClass = createEClass(BASICTYPE);
    createEAttribute(basictypeEClass, BASICTYPE__IS_ARRAY);
    createEAttribute(basictypeEClass, BASICTYPE__TYPENAME);

    saiAssignmentEClass = createEClass(SAI_ASSIGNMENT);
    createEReference(saiAssignmentEClass, SAI_ASSIGNMENT__LEFT);
    createEReference(saiAssignmentEClass, SAI_ASSIGNMENT__RIGHT);

    saiMemberSelectionEClass = createEClass(SAI_MEMBER_SELECTION);
    createEReference(saiMemberSelectionEClass, SAI_MEMBER_SELECTION__RECEIVER);
    createEReference(saiMemberSelectionEClass, SAI_MEMBER_SELECTION__MEMBER);
    createEAttribute(saiMemberSelectionEClass, SAI_MEMBER_SELECTION__METHODINVOCATION);
    createEReference(saiMemberSelectionEClass, SAI_MEMBER_SELECTION__ARGS);

    saiStringConstantEClass = createEClass(SAI_STRING_CONSTANT);
    createEAttribute(saiStringConstantEClass, SAI_STRING_CONSTANT__VALUE);

    saiIntConstantEClass = createEClass(SAI_INT_CONSTANT);
    createEAttribute(saiIntConstantEClass, SAI_INT_CONSTANT__VALUE);

    saiBoolConstantEClass = createEClass(SAI_BOOL_CONSTANT);
    createEAttribute(saiBoolConstantEClass, SAI_BOOL_CONSTANT__VALUE);

    saiNullEClass = createEClass(SAI_NULL);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    saiFieldEClass.getESuperTypes().add(this.getSAIMember());
    saiMethodEClass.getESuperTypes().add(this.getSAIMember());
    saiBlockEClass.getESuperTypes().add(this.getSAIIfBlock());
    saiVariableDeclarationEClass.getESuperTypes().add(this.getSAIStatement());
    saiReturnEClass.getESuperTypes().add(this.getSAIStatement());
    saiIfStatementEClass.getESuperTypes().add(this.getSAIStatement());
    saiExpressionEClass.getESuperTypes().add(this.getSAIStatement());
    vmNodeOpCodeElementEClass.getESuperTypes().add(this.getVMNodeEleemnts());
    vmNodeOutElementsEClass.getESuperTypes().add(this.getVMNodeEleemnts());
    vmNodeInElementsEClass.getESuperTypes().add(this.getVMNodeEleemnts());
    vmNodeFieldElementsEClass.getESuperTypes().add(this.getVMNodeEleemnts());
    basictypeEClass.getESuperTypes().add(this.getELEMENTTYPE());
    saiAssignmentEClass.getESuperTypes().add(this.getSAIExpression());
    saiMemberSelectionEClass.getESuperTypes().add(this.getSAIExpression());
    saiStringConstantEClass.getESuperTypes().add(this.getSAIExpression());
    saiIntConstantEClass.getESuperTypes().add(this.getSAIExpression());
    saiBoolConstantEClass.getESuperTypes().add(this.getSAIExpression());
    saiNullEClass.getESuperTypes().add(this.getSAIExpression());

    // Initialize classes and features; add operations and parameters
    initEClass(modelEClass, Model.class, "Model", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getModel_Package_declaration(), this.getPackageDeclaration(), null, "package_declaration", null, 0, 1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getModel_Import_declarations(), this.getImportDeclaration(), null, "import_declarations", null, 0, -1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getModel_Definitions(), ecorePackage.getEObject(), null, "definitions", null, 0, -1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(workflowFunctionsDefinitionEClass, WorkflowFunctionsDefinition.class, "WorkflowFunctionsDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getWorkflowFunctionsDefinition_Name(), ecorePackage.getEString(), "name", null, 0, 1, WorkflowFunctionsDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getWorkflowFunctionsDefinition_Members(), this.getSAIMember(), null, "members", null, 0, -1, WorkflowFunctionsDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(saiMemberEClass, SAIMember.class, "SAIMember", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSAIMember_Type(), this.getELEMENTTYPE(), null, "type", null, 0, 1, SAIMember.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSAIMember_Name(), ecorePackage.getEString(), "name", null, 0, 1, SAIMember.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(saiFieldEClass, SAIField.class, "SAIField", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(saiMethodEClass, SAIMethod.class, "SAIMethod", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSAIMethod_Params(), this.getSAIParameter(), null, "params", null, 0, -1, SAIMethod.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSAIMethod_Body(), this.getSAIBlock(), null, "body", null, 0, 1, SAIMethod.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(saiParameterEClass, SAIParameter.class, "SAIParameter", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSAIParameter_Type(), this.getELEMENTTYPE(), null, "type", null, 0, 1, SAIParameter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSAIParameter_Name(), ecorePackage.getEString(), "name", null, 0, 1, SAIParameter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(saiBlockEClass, SAIBlock.class, "SAIBlock", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(saiStatementEClass, SAIStatement.class, "SAIStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(saiVariableDeclarationEClass, SAIVariableDeclaration.class, "SAIVariableDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSAIVariableDeclaration_Type(), this.getELEMENTTYPE(), null, "type", null, 0, 1, SAIVariableDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSAIVariableDeclaration_Name(), ecorePackage.getEString(), "name", null, 0, 1, SAIVariableDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSAIVariableDeclaration_Expression(), this.getSAIExpression(), null, "expression", null, 0, 1, SAIVariableDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(saiReturnEClass, SAIReturn.class, "SAIReturn", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSAIReturn_Expression(), this.getSAIExpression(), null, "expression", null, 0, 1, SAIReturn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(saiIfStatementEClass, SAIIfStatement.class, "SAIIfStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSAIIfStatement_Expression(), this.getSAIExpression(), null, "expression", null, 0, 1, SAIIfStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSAIIfStatement_Thenblock(), this.getSAIIfBlock(), null, "thenblock", null, 0, 1, SAIIfStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSAIIfStatement_ElseBlock(), this.getSAIIfBlock(), null, "elseBlock", null, 0, 1, SAIIfStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(saiIfBlockEClass, SAIIfBlock.class, "SAIIfBlock", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSAIIfBlock_Statements(), this.getSAIStatement(), null, "statements", null, 0, -1, SAIIfBlock.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(saiExpressionEClass, SAIExpression.class, "SAIExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(packageDeclarationEClass, PackageDeclaration.class, "PackageDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPackageDeclaration_Name(), ecorePackage.getEString(), "name", null, 0, 1, PackageDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(importDeclarationEClass, ImportDeclaration.class, "ImportDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getImportDeclaration_ImportedNamespace(), ecorePackage.getEString(), "importedNamespace", null, 0, 1, ImportDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(workflowInputDefinitionEClass, WorkflowInputDefinition.class, "WorkflowInputDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getWorkflowInputDefinition_Name(), ecorePackage.getEString(), "name", null, 0, 1, WorkflowInputDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getWorkflowInputDefinition_UiElements(), this.getWorkflowUIElement(), null, "uiElements", null, 0, -1, WorkflowInputDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(workflowUIElementEClass, WorkflowUIElement.class, "WorkflowUIElement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getWorkflowUIElement_Name(), ecorePackage.getEString(), "name", null, 0, 1, WorkflowUIElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getWorkflowUIElement_Datatype(), this.getELEMENTTYPE(), null, "datatype", null, 0, 1, WorkflowUIElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getWorkflowUIElement_Uielement(), this.getWorkflowUIElementMap(), null, "uielement", null, 0, 1, WorkflowUIElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(workflowUIElementMapEClass, WorkflowUIElementMap.class, "WorkflowUIElementMap", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getWorkflowUIElementMap_Label(), ecorePackage.getEString(), "label", null, 0, 1, WorkflowUIElementMap.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getWorkflowUIElementMap_Uitype(), ecorePackage.getEString(), "uitype", null, 0, 1, WorkflowUIElementMap.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getWorkflowUIElementMap_Defaultvalue(), this.getDataDictionaryValue(), null, "defaultvalue", null, 0, 1, WorkflowUIElementMap.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getWorkflowUIElementMap_Options(), this.getDataDictionaryArrayValue(), null, "options", null, 0, 1, WorkflowUIElementMap.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(workflowDataDictionaryDefinitionEClass, WorkflowDataDictionaryDefinition.class, "WorkflowDataDictionaryDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getWorkflowDataDictionaryDefinition_Name(), ecorePackage.getEString(), "name", null, 0, 1, WorkflowDataDictionaryDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getWorkflowDataDictionaryDefinition_KeyValuePairs(), this.getDatadictionaryKeyValuePair(), null, "keyValuePairs", null, 0, -1, WorkflowDataDictionaryDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(datadictionaryKeyValuePairEClass, DatadictionaryKeyValuePair.class, "DatadictionaryKeyValuePair", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDatadictionaryKeyValuePair_Name(), ecorePackage.getEString(), "name", null, 0, 1, DatadictionaryKeyValuePair.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDatadictionaryKeyValuePair_Extends(), this.getDatadictionaryKeyValuePair(), null, "extends", null, 0, 1, DatadictionaryKeyValuePair.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDatadictionaryKeyValuePair_Value(), this.getDataDictionaryValue(), null, "value", null, 0, 1, DatadictionaryKeyValuePair.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dataDictionaryValueEClass, DataDictionaryValue.class, "DataDictionaryValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDataDictionaryValue_Value(), ecorePackage.getEObject(), null, "value", null, 0, 1, DataDictionaryValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dataDictionaryArrayValueEClass, DataDictionaryArrayValue.class, "DataDictionaryArrayValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDataDictionaryArrayValue_Values(), ecorePackage.getEString(), "values", null, 0, -1, DataDictionaryArrayValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dataDictionaryMapValueEClass, DataDictionaryMapValue.class, "DataDictionaryMapValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDataDictionaryMapValue_KeyValuePairs(), this.getDatadictionaryKeyValuePair(), null, "keyValuePairs", null, 0, -1, DataDictionaryMapValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dataDictionaryBooleanValueEClass, DataDictionaryBooleanValue.class, "DataDictionaryBooleanValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDataDictionaryBooleanValue_Value(), ecorePackage.getEString(), "value", null, 0, 1, DataDictionaryBooleanValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dataDictionaryStringValueEClass, DataDictionaryStringValue.class, "DataDictionaryStringValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDataDictionaryStringValue_Value(), ecorePackage.getEString(), "value", null, 0, 1, DataDictionaryStringValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dataDictionaryNullValueEClass, DataDictionaryNullValue.class, "DataDictionaryNullValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDataDictionaryNullValue_Value(), ecorePackage.getEString(), "value", null, 0, 1, DataDictionaryNullValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(vmNodeDefinitionEClass, VMNodeDefinition.class, "VMNodeDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getVMNodeDefinition_Nodetype(), ecorePackage.getEString(), "nodetype", null, 0, 1, VMNodeDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getVMNodeDefinition_Name(), ecorePackage.getEString(), "name", null, 0, 1, VMNodeDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getVMNodeDefinition_Elements(), this.getVMNodeEleemnts(), null, "elements", null, 0, -1, VMNodeDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(vmNodeEleemntsEClass, VMNodeEleemnts.class, "VMNodeEleemnts", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(vmNodeOpCodeElementEClass, VMNodeOpCodeElement.class, "VMNodeOpCodeElement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getVMNodeOpCodeElement_Opcode(), ecorePackage.getEString(), "opcode", null, 0, 1, VMNodeOpCodeElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(vmNodeOutElementsEClass, VMNodeOutElements.class, "VMNodeOutElements", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getVMNodeOutElements_OutElements(), this.getVMNodeOutElement(), null, "outElements", null, 0, -1, VMNodeOutElements.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(vmNodeInElementsEClass, VMNodeInElements.class, "VMNodeInElements", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getVMNodeInElements_InElements(), this.getVMNodeInElement(), null, "inElements", null, 0, -1, VMNodeInElements.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(vmNodeFieldElementsEClass, VMNodeFieldElements.class, "VMNodeFieldElements", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getVMNodeFieldElements_FieldELements(), ecorePackage.getEObject(), null, "fieldELements", null, 0, -1, VMNodeFieldElements.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(vmNodeOutElementEClass, VMNodeOutElement.class, "VMNodeOutElement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getVMNodeOutElement_Name(), ecorePackage.getEString(), "name", null, 0, 1, VMNodeOutElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getVMNodeOutElement_Type(), this.getELEMENTTYPE(), null, "type", null, 0, 1, VMNodeOutElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getVMNodeOutElement_Hasrequire(), ecorePackage.getEBoolean(), "hasrequire", null, 0, 1, VMNodeOutElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getVMNodeOutElement_Inputreference(), this.getVMNodeInElement(), null, "inputreference", null, 0, 1, VMNodeOutElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(vmNodeInElementEClass, VMNodeInElement.class, "VMNodeInElement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getVMNodeInElement_Policy(), ecorePackage.getEString(), "policy", null, 0, 1, VMNodeInElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getVMNodeInElement_Name(), ecorePackage.getEString(), "name", null, 0, 1, VMNodeInElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(vmFieldElementEClass, VMFieldElement.class, "VMFieldElement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getVMFieldElement_Policy(), ecorePackage.getEString(), "policy", null, 0, 1, VMFieldElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getVMFieldElement_Type(), this.getELEMENTTYPE(), null, "type", null, 0, 1, VMFieldElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getVMFieldElement_Name(), ecorePackage.getEString(), "name", null, 0, 1, VMFieldElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getVMFieldElement_Defaultvalue(), this.getDataDictionaryValue(), null, "defaultvalue", null, 0, 1, VMFieldElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(vmOverrideFieldElementEClass, VMOverrideFieldElement.class, "VMOverrideFieldElement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getVMOverrideFieldElement_Policy(), ecorePackage.getEString(), "policy", null, 0, 1, VMOverrideFieldElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getVMOverrideFieldElement_Type(), this.getELEMENTTYPE(), null, "type", null, 0, 1, VMOverrideFieldElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getVMOverrideFieldElement_Name(), ecorePackage.getEString(), "name", null, 0, 1, VMOverrideFieldElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getVMOverrideFieldElement_Defaultvalue(), ecorePackage.getEString(), "defaultvalue", null, 0, 1, VMOverrideFieldElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(llmTaskDefinitionEClass, LlmTaskDefinition.class, "LlmTaskDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLlmTaskDefinition_Name(), ecorePackage.getEString(), "name", null, 0, 1, LlmTaskDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLlmTaskDefinition_Annotation_interfaces(), this.getAnnotationInterfaceReference(), null, "annotation_interfaces", null, 0, -1, LlmTaskDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLlmTaskDefinition_Assignments(), this.getLlmVariableAssignment(), null, "assignments", null, 0, -1, LlmTaskDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(annotationInterfaceReferenceEClass, AnnotationInterfaceReference.class, "AnnotationInterfaceReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAnnotationInterfaceReference_Name(), this.getVMNodeDefinition(), null, "name", null, 0, 1, AnnotationInterfaceReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(llmVariableAssignmentEClass, LlmVariableAssignment.class, "LlmVariableAssignment", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLlmVariableAssignment_Variablename(), ecorePackage.getEString(), "variablename", null, 0, 1, LlmVariableAssignment.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLlmVariableAssignment_Template(), this.getDataDictionaryValue(), null, "template", null, 0, 1, LlmVariableAssignment.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(workflowDefinitionEClass, WorkflowDefinition.class, "WorkflowDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getWorkflowDefinition_Name(), ecorePackage.getEString(), "name", null, 0, 1, WorkflowDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getWorkflowDefinition_Input(), this.getWorkflowInputDefinition(), null, "input", null, 0, 1, WorkflowDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getWorkflowDefinition_Datadictionary(), this.getWorkflowDataDictionaryDefinition(), null, "datadictionary", null, 0, 1, WorkflowDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getWorkflowDefinition_Statements(), this.getWorkflowDefinitionApplyLLMTaskStatement(), null, "statements", null, 0, -1, WorkflowDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(workflowIfStatementEClass, WorkflowIfStatement.class, "WorkflowIfStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getWorkflowIfStatement_Condition(), ecorePackage.getEString(), "condition", null, 0, 1, WorkflowIfStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getWorkflowIfStatement_ElsePresent(), ecorePackage.getEBoolean(), "elsePresent", null, 0, 1, WorkflowIfStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(workflowDefinitionApplyLLMTaskStatementEClass, WorkflowDefinitionApplyLLMTaskStatement.class, "WorkflowDefinitionApplyLLMTaskStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getWorkflowDefinitionApplyLLMTaskStatement_Llmtask(), this.getLlmTaskDefinition(), null, "llmtask", null, 0, 1, WorkflowDefinitionApplyLLMTaskStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getWorkflowDefinitionApplyLLMTaskStatement_Noderesultassigments(), this.getWorkflowDefinitionApplyLLMNodeResultAssignment(), null, "noderesultassigments", null, 0, -1, WorkflowDefinitionApplyLLMTaskStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(workflowDefinitionApplyLLMNodeResultAssignmentEClass, WorkflowDefinitionApplyLLMNodeResultAssignment.class, "WorkflowDefinitionApplyLLMNodeResultAssignment", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getWorkflowDefinitionApplyLLMNodeResultAssignment_Environmentresultname(), ecorePackage.getEString(), "environmentresultname", null, 0, 1, WorkflowDefinitionApplyLLMNodeResultAssignment.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getWorkflowDefinitionApplyLLMNodeResultAssignment_Noderesultname(), ecorePackage.getEString(), "noderesultname", null, 0, 1, WorkflowDefinitionApplyLLMNodeResultAssignment.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(elementtypeEClass, de.mindscan.ai.aidsl.aiDsl.ELEMENTTYPE.class, "ELEMENTTYPE", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(basictypeEClass, de.mindscan.ai.aidsl.aiDsl.BASICTYPE.class, "BASICTYPE", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getBASICTYPE_IsArray(), ecorePackage.getEBoolean(), "isArray", null, 0, 1, de.mindscan.ai.aidsl.aiDsl.BASICTYPE.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getBASICTYPE_Typename(), ecorePackage.getEString(), "typename", null, 0, 1, de.mindscan.ai.aidsl.aiDsl.BASICTYPE.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(saiAssignmentEClass, SAIAssignment.class, "SAIAssignment", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSAIAssignment_Left(), this.getSAIExpression(), null, "left", null, 0, 1, SAIAssignment.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSAIAssignment_Right(), this.getSAIExpression(), null, "right", null, 0, 1, SAIAssignment.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(saiMemberSelectionEClass, SAIMemberSelection.class, "SAIMemberSelection", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSAIMemberSelection_Receiver(), this.getSAIExpression(), null, "receiver", null, 0, 1, SAIMemberSelection.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSAIMemberSelection_Member(), this.getSAIMember(), null, "member", null, 0, 1, SAIMemberSelection.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSAIMemberSelection_Methodinvocation(), ecorePackage.getEBoolean(), "methodinvocation", null, 0, 1, SAIMemberSelection.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSAIMemberSelection_Args(), this.getSAIExpression(), null, "args", null, 0, -1, SAIMemberSelection.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(saiStringConstantEClass, SAIStringConstant.class, "SAIStringConstant", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSAIStringConstant_Value(), ecorePackage.getEString(), "value", null, 0, 1, SAIStringConstant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(saiIntConstantEClass, SAIIntConstant.class, "SAIIntConstant", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSAIIntConstant_Value(), ecorePackage.getEInt(), "value", null, 0, 1, SAIIntConstant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(saiBoolConstantEClass, SAIBoolConstant.class, "SAIBoolConstant", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSAIBoolConstant_Value(), ecorePackage.getEString(), "value", null, 0, 1, SAIBoolConstant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(saiNullEClass, SAINull.class, "SAINull", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    // Create resource
    createResource(eNS_URI);
  }

} //AiDslPackageImpl
