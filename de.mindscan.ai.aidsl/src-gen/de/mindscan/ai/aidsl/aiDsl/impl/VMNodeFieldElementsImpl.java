/**
 * generated by Xtext 2.27.0
 */
package de.mindscan.ai.aidsl.aiDsl.impl;

import de.mindscan.ai.aidsl.aiDsl.AiDslPackage;
import de.mindscan.ai.aidsl.aiDsl.VMNodeFieldElements;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>VM Node Field Elements</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.mindscan.ai.aidsl.aiDsl.impl.VMNodeFieldElementsImpl#getFieldELements <em>Field ELements</em>}</li>
 * </ul>
 *
 * @generated
 */
public class VMNodeFieldElementsImpl extends VMNodeEleemntsImpl implements VMNodeFieldElements
{
  /**
   * The cached value of the '{@link #getFieldELements() <em>Field ELements</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFieldELements()
   * @generated
   * @ordered
   */
  protected EList<EObject> fieldELements;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected VMNodeFieldElementsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AiDslPackage.Literals.VM_NODE_FIELD_ELEMENTS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<EObject> getFieldELements()
  {
    if (fieldELements == null)
    {
      fieldELements = new EObjectContainmentEList<EObject>(EObject.class, this, AiDslPackage.VM_NODE_FIELD_ELEMENTS__FIELD_ELEMENTS);
    }
    return fieldELements;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case AiDslPackage.VM_NODE_FIELD_ELEMENTS__FIELD_ELEMENTS:
        return ((InternalEList<?>)getFieldELements()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AiDslPackage.VM_NODE_FIELD_ELEMENTS__FIELD_ELEMENTS:
        return getFieldELements();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AiDslPackage.VM_NODE_FIELD_ELEMENTS__FIELD_ELEMENTS:
        getFieldELements().clear();
        getFieldELements().addAll((Collection<? extends EObject>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AiDslPackage.VM_NODE_FIELD_ELEMENTS__FIELD_ELEMENTS:
        getFieldELements().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AiDslPackage.VM_NODE_FIELD_ELEMENTS__FIELD_ELEMENTS:
        return fieldELements != null && !fieldELements.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //VMNodeFieldElementsImpl
