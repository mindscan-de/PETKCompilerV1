/**
 * generated by Xtext 2.27.0
 */
package de.mindscan.ai.aidsl.aiDsl.impl;

import de.mindscan.ai.aidsl.aiDsl.AiDslPackage;
import de.mindscan.ai.aidsl.aiDsl.VMNodeInElement;
import de.mindscan.ai.aidsl.aiDsl.VMNodeInElements;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>VM Node In Elements</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.mindscan.ai.aidsl.aiDsl.impl.VMNodeInElementsImpl#getInElements <em>In Elements</em>}</li>
 * </ul>
 *
 * @generated
 */
public class VMNodeInElementsImpl extends VMNodeEleemntsImpl implements VMNodeInElements
{
  /**
   * The cached value of the '{@link #getInElements() <em>In Elements</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInElements()
   * @generated
   * @ordered
   */
  protected EList<VMNodeInElement> inElements;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected VMNodeInElementsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AiDslPackage.Literals.VM_NODE_IN_ELEMENTS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<VMNodeInElement> getInElements()
  {
    if (inElements == null)
    {
      inElements = new EObjectContainmentEList<VMNodeInElement>(VMNodeInElement.class, this, AiDslPackage.VM_NODE_IN_ELEMENTS__IN_ELEMENTS);
    }
    return inElements;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case AiDslPackage.VM_NODE_IN_ELEMENTS__IN_ELEMENTS:
        return ((InternalEList<?>)getInElements()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AiDslPackage.VM_NODE_IN_ELEMENTS__IN_ELEMENTS:
        return getInElements();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AiDslPackage.VM_NODE_IN_ELEMENTS__IN_ELEMENTS:
        getInElements().clear();
        getInElements().addAll((Collection<? extends VMNodeInElement>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AiDslPackage.VM_NODE_IN_ELEMENTS__IN_ELEMENTS:
        getInElements().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AiDslPackage.VM_NODE_IN_ELEMENTS__IN_ELEMENTS:
        return inElements != null && !inElements.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //VMNodeInElementsImpl
