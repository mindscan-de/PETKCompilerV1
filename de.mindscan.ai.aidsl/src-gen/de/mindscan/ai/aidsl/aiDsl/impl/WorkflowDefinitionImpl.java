/**
 * generated by Xtext 2.27.0
 */
package de.mindscan.ai.aidsl.aiDsl.impl;

import de.mindscan.ai.aidsl.aiDsl.AiDslPackage;
import de.mindscan.ai.aidsl.aiDsl.WorkflowDataDictionaryDefinition;
import de.mindscan.ai.aidsl.aiDsl.WorkflowDefinition;
import de.mindscan.ai.aidsl.aiDsl.WorkflowDefinitionApplyLLMTaskStatement;
import de.mindscan.ai.aidsl.aiDsl.WorkflowInputDefinition;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Workflow Definition</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.mindscan.ai.aidsl.aiDsl.impl.WorkflowDefinitionImpl#getName <em>Name</em>}</li>
 *   <li>{@link de.mindscan.ai.aidsl.aiDsl.impl.WorkflowDefinitionImpl#getInput <em>Input</em>}</li>
 *   <li>{@link de.mindscan.ai.aidsl.aiDsl.impl.WorkflowDefinitionImpl#getDatadictionary <em>Datadictionary</em>}</li>
 *   <li>{@link de.mindscan.ai.aidsl.aiDsl.impl.WorkflowDefinitionImpl#getStatements <em>Statements</em>}</li>
 * </ul>
 *
 * @generated
 */
public class WorkflowDefinitionImpl extends MinimalEObjectImpl.Container implements WorkflowDefinition
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getInput() <em>Input</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInput()
   * @generated
   * @ordered
   */
  protected WorkflowInputDefinition input;

  /**
   * The cached value of the '{@link #getDatadictionary() <em>Datadictionary</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDatadictionary()
   * @generated
   * @ordered
   */
  protected WorkflowDataDictionaryDefinition datadictionary;

  /**
   * The cached value of the '{@link #getStatements() <em>Statements</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStatements()
   * @generated
   * @ordered
   */
  protected EList<WorkflowDefinitionApplyLLMTaskStatement> statements;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected WorkflowDefinitionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AiDslPackage.Literals.WORKFLOW_DEFINITION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AiDslPackage.WORKFLOW_DEFINITION__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public WorkflowInputDefinition getInput()
  {
    if (input != null && input.eIsProxy())
    {
      InternalEObject oldInput = (InternalEObject)input;
      input = (WorkflowInputDefinition)eResolveProxy(oldInput);
      if (input != oldInput)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, AiDslPackage.WORKFLOW_DEFINITION__INPUT, oldInput, input));
      }
    }
    return input;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public WorkflowInputDefinition basicGetInput()
  {
    return input;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setInput(WorkflowInputDefinition newInput)
  {
    WorkflowInputDefinition oldInput = input;
    input = newInput;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AiDslPackage.WORKFLOW_DEFINITION__INPUT, oldInput, input));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public WorkflowDataDictionaryDefinition getDatadictionary()
  {
    if (datadictionary != null && datadictionary.eIsProxy())
    {
      InternalEObject oldDatadictionary = (InternalEObject)datadictionary;
      datadictionary = (WorkflowDataDictionaryDefinition)eResolveProxy(oldDatadictionary);
      if (datadictionary != oldDatadictionary)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, AiDslPackage.WORKFLOW_DEFINITION__DATADICTIONARY, oldDatadictionary, datadictionary));
      }
    }
    return datadictionary;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public WorkflowDataDictionaryDefinition basicGetDatadictionary()
  {
    return datadictionary;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDatadictionary(WorkflowDataDictionaryDefinition newDatadictionary)
  {
    WorkflowDataDictionaryDefinition oldDatadictionary = datadictionary;
    datadictionary = newDatadictionary;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AiDslPackage.WORKFLOW_DEFINITION__DATADICTIONARY, oldDatadictionary, datadictionary));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<WorkflowDefinitionApplyLLMTaskStatement> getStatements()
  {
    if (statements == null)
    {
      statements = new EObjectContainmentEList<WorkflowDefinitionApplyLLMTaskStatement>(WorkflowDefinitionApplyLLMTaskStatement.class, this, AiDslPackage.WORKFLOW_DEFINITION__STATEMENTS);
    }
    return statements;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case AiDslPackage.WORKFLOW_DEFINITION__STATEMENTS:
        return ((InternalEList<?>)getStatements()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AiDslPackage.WORKFLOW_DEFINITION__NAME:
        return getName();
      case AiDslPackage.WORKFLOW_DEFINITION__INPUT:
        if (resolve) return getInput();
        return basicGetInput();
      case AiDslPackage.WORKFLOW_DEFINITION__DATADICTIONARY:
        if (resolve) return getDatadictionary();
        return basicGetDatadictionary();
      case AiDslPackage.WORKFLOW_DEFINITION__STATEMENTS:
        return getStatements();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AiDslPackage.WORKFLOW_DEFINITION__NAME:
        setName((String)newValue);
        return;
      case AiDslPackage.WORKFLOW_DEFINITION__INPUT:
        setInput((WorkflowInputDefinition)newValue);
        return;
      case AiDslPackage.WORKFLOW_DEFINITION__DATADICTIONARY:
        setDatadictionary((WorkflowDataDictionaryDefinition)newValue);
        return;
      case AiDslPackage.WORKFLOW_DEFINITION__STATEMENTS:
        getStatements().clear();
        getStatements().addAll((Collection<? extends WorkflowDefinitionApplyLLMTaskStatement>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AiDslPackage.WORKFLOW_DEFINITION__NAME:
        setName(NAME_EDEFAULT);
        return;
      case AiDslPackage.WORKFLOW_DEFINITION__INPUT:
        setInput((WorkflowInputDefinition)null);
        return;
      case AiDslPackage.WORKFLOW_DEFINITION__DATADICTIONARY:
        setDatadictionary((WorkflowDataDictionaryDefinition)null);
        return;
      case AiDslPackage.WORKFLOW_DEFINITION__STATEMENTS:
        getStatements().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AiDslPackage.WORKFLOW_DEFINITION__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case AiDslPackage.WORKFLOW_DEFINITION__INPUT:
        return input != null;
      case AiDslPackage.WORKFLOW_DEFINITION__DATADICTIONARY:
        return datadictionary != null;
      case AiDslPackage.WORKFLOW_DEFINITION__STATEMENTS:
        return statements != null && !statements.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //WorkflowDefinitionImpl
