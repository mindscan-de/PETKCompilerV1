/**
 * generated by Xtext 2.27.0
 */
package de.mindscan.ai.aidsl.aiDsl.impl;

import de.mindscan.ai.aidsl.aiDsl.AiDslPackage;
import de.mindscan.ai.aidsl.aiDsl.WorkflowUIElementMap;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Workflow UI Element Map</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.mindscan.ai.aidsl.aiDsl.impl.WorkflowUIElementMapImpl#getLabel <em>Label</em>}</li>
 *   <li>{@link de.mindscan.ai.aidsl.aiDsl.impl.WorkflowUIElementMapImpl#getUitype <em>Uitype</em>}</li>
 *   <li>{@link de.mindscan.ai.aidsl.aiDsl.impl.WorkflowUIElementMapImpl#getOptions <em>Options</em>}</li>
 * </ul>
 *
 * @generated
 */
public class WorkflowUIElementMapImpl extends MinimalEObjectImpl.Container implements WorkflowUIElementMap
{
  /**
   * The default value of the '{@link #getLabel() <em>Label</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLabel()
   * @generated
   * @ordered
   */
  protected static final String LABEL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getLabel() <em>Label</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLabel()
   * @generated
   * @ordered
   */
  protected String label = LABEL_EDEFAULT;

  /**
   * The default value of the '{@link #getUitype() <em>Uitype</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUitype()
   * @generated
   * @ordered
   */
  protected static final String UITYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getUitype() <em>Uitype</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUitype()
   * @generated
   * @ordered
   */
  protected String uitype = UITYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getOptions() <em>Options</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOptions()
   * @generated
   * @ordered
   */
  protected static final String OPTIONS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getOptions() <em>Options</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOptions()
   * @generated
   * @ordered
   */
  protected String options = OPTIONS_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected WorkflowUIElementMapImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AiDslPackage.Literals.WORKFLOW_UI_ELEMENT_MAP;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLabel()
  {
    return label;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLabel(String newLabel)
  {
    String oldLabel = label;
    label = newLabel;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AiDslPackage.WORKFLOW_UI_ELEMENT_MAP__LABEL, oldLabel, label));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getUitype()
  {
    return uitype;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setUitype(String newUitype)
  {
    String oldUitype = uitype;
    uitype = newUitype;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AiDslPackage.WORKFLOW_UI_ELEMENT_MAP__UITYPE, oldUitype, uitype));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getOptions()
  {
    return options;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOptions(String newOptions)
  {
    String oldOptions = options;
    options = newOptions;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AiDslPackage.WORKFLOW_UI_ELEMENT_MAP__OPTIONS, oldOptions, options));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AiDslPackage.WORKFLOW_UI_ELEMENT_MAP__LABEL:
        return getLabel();
      case AiDslPackage.WORKFLOW_UI_ELEMENT_MAP__UITYPE:
        return getUitype();
      case AiDslPackage.WORKFLOW_UI_ELEMENT_MAP__OPTIONS:
        return getOptions();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AiDslPackage.WORKFLOW_UI_ELEMENT_MAP__LABEL:
        setLabel((String)newValue);
        return;
      case AiDslPackage.WORKFLOW_UI_ELEMENT_MAP__UITYPE:
        setUitype((String)newValue);
        return;
      case AiDslPackage.WORKFLOW_UI_ELEMENT_MAP__OPTIONS:
        setOptions((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AiDslPackage.WORKFLOW_UI_ELEMENT_MAP__LABEL:
        setLabel(LABEL_EDEFAULT);
        return;
      case AiDslPackage.WORKFLOW_UI_ELEMENT_MAP__UITYPE:
        setUitype(UITYPE_EDEFAULT);
        return;
      case AiDslPackage.WORKFLOW_UI_ELEMENT_MAP__OPTIONS:
        setOptions(OPTIONS_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AiDslPackage.WORKFLOW_UI_ELEMENT_MAP__LABEL:
        return LABEL_EDEFAULT == null ? label != null : !LABEL_EDEFAULT.equals(label);
      case AiDslPackage.WORKFLOW_UI_ELEMENT_MAP__UITYPE:
        return UITYPE_EDEFAULT == null ? uitype != null : !UITYPE_EDEFAULT.equals(uitype);
      case AiDslPackage.WORKFLOW_UI_ELEMENT_MAP__OPTIONS:
        return OPTIONS_EDEFAULT == null ? options != null : !OPTIONS_EDEFAULT.equals(options);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (label: ");
    result.append(label);
    result.append(", uitype: ");
    result.append(uitype);
    result.append(", options: ");
    result.append(options);
    result.append(')');
    return result.toString();
  }

} //WorkflowUIElementMapImpl
