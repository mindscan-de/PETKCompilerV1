/**
 * generated by Xtext 2.27.0
 */
package de.mindscan.ai.aidsl.aiDsl.util;

import de.mindscan.ai.aidsl.aiDsl.*;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see de.mindscan.ai.aidsl.aiDsl.AiDslPackage
 * @generated
 */
public class AiDslAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static AiDslPackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AiDslAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = AiDslPackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AiDslSwitch<Adapter> modelSwitch =
    new AiDslSwitch<Adapter>()
    {
      @Override
      public Adapter caseModel(Model object)
      {
        return createModelAdapter();
      }
      @Override
      public Adapter caseWorkflowFunctionsDefinition(WorkflowFunctionsDefinition object)
      {
        return createWorkflowFunctionsDefinitionAdapter();
      }
      @Override
      public Adapter caseSAIMember(SAIMember object)
      {
        return createSAIMemberAdapter();
      }
      @Override
      public Adapter caseSAIField(SAIField object)
      {
        return createSAIFieldAdapter();
      }
      @Override
      public Adapter caseSAIMethod(SAIMethod object)
      {
        return createSAIMethodAdapter();
      }
      @Override
      public Adapter caseSAIParameter(SAIParameter object)
      {
        return createSAIParameterAdapter();
      }
      @Override
      public Adapter caseSAIBlock(SAIBlock object)
      {
        return createSAIBlockAdapter();
      }
      @Override
      public Adapter caseSAIStatement(SAIStatement object)
      {
        return createSAIStatementAdapter();
      }
      @Override
      public Adapter caseSAIVariableDeclaration(SAIVariableDeclaration object)
      {
        return createSAIVariableDeclarationAdapter();
      }
      @Override
      public Adapter caseSAIReturn(SAIReturn object)
      {
        return createSAIReturnAdapter();
      }
      @Override
      public Adapter caseSAIIfStatement(SAIIfStatement object)
      {
        return createSAIIfStatementAdapter();
      }
      @Override
      public Adapter caseSAIIfBlock(SAIIfBlock object)
      {
        return createSAIIfBlockAdapter();
      }
      @Override
      public Adapter caseSAIExpression(SAIExpression object)
      {
        return createSAIExpressionAdapter();
      }
      @Override
      public Adapter casePackageDeclaration(PackageDeclaration object)
      {
        return createPackageDeclarationAdapter();
      }
      @Override
      public Adapter caseImportDeclaration(ImportDeclaration object)
      {
        return createImportDeclarationAdapter();
      }
      @Override
      public Adapter caseWorkflowInputDefinition(WorkflowInputDefinition object)
      {
        return createWorkflowInputDefinitionAdapter();
      }
      @Override
      public Adapter caseWorkflowUIElement(WorkflowUIElement object)
      {
        return createWorkflowUIElementAdapter();
      }
      @Override
      public Adapter caseWorkflowUIElementMap(WorkflowUIElementMap object)
      {
        return createWorkflowUIElementMapAdapter();
      }
      @Override
      public Adapter caseWorkflowDataDictionaryDefinition(WorkflowDataDictionaryDefinition object)
      {
        return createWorkflowDataDictionaryDefinitionAdapter();
      }
      @Override
      public Adapter caseDatadictionaryKeyValuePair(DatadictionaryKeyValuePair object)
      {
        return createDatadictionaryKeyValuePairAdapter();
      }
      @Override
      public Adapter caseDataDictionaryValue(DataDictionaryValue object)
      {
        return createDataDictionaryValueAdapter();
      }
      @Override
      public Adapter caseDataDictionaryArrayValue(DataDictionaryArrayValue object)
      {
        return createDataDictionaryArrayValueAdapter();
      }
      @Override
      public Adapter caseDataDictionaryMapValue(DataDictionaryMapValue object)
      {
        return createDataDictionaryMapValueAdapter();
      }
      @Override
      public Adapter caseDataDictionaryBooleanValue(DataDictionaryBooleanValue object)
      {
        return createDataDictionaryBooleanValueAdapter();
      }
      @Override
      public Adapter caseDataDictionaryStringValue(DataDictionaryStringValue object)
      {
        return createDataDictionaryStringValueAdapter();
      }
      @Override
      public Adapter caseDataDictionaryNullValue(DataDictionaryNullValue object)
      {
        return createDataDictionaryNullValueAdapter();
      }
      @Override
      public Adapter caseVMNodeDefinition(VMNodeDefinition object)
      {
        return createVMNodeDefinitionAdapter();
      }
      @Override
      public Adapter caseVMNodeEleemnts(VMNodeEleemnts object)
      {
        return createVMNodeEleemntsAdapter();
      }
      @Override
      public Adapter caseVMNodeOpCodeElement(VMNodeOpCodeElement object)
      {
        return createVMNodeOpCodeElementAdapter();
      }
      @Override
      public Adapter caseVMNodeOutElements(VMNodeOutElements object)
      {
        return createVMNodeOutElementsAdapter();
      }
      @Override
      public Adapter caseVMNodeInElements(VMNodeInElements object)
      {
        return createVMNodeInElementsAdapter();
      }
      @Override
      public Adapter caseVMNodeFieldElements(VMNodeFieldElements object)
      {
        return createVMNodeFieldElementsAdapter();
      }
      @Override
      public Adapter caseVMNodeOutElement(VMNodeOutElement object)
      {
        return createVMNodeOutElementAdapter();
      }
      @Override
      public Adapter caseVMNodeInElement(VMNodeInElement object)
      {
        return createVMNodeInElementAdapter();
      }
      @Override
      public Adapter caseVMFieldElement(VMFieldElement object)
      {
        return createVMFieldElementAdapter();
      }
      @Override
      public Adapter caseVMOverrideFieldElement(VMOverrideFieldElement object)
      {
        return createVMOverrideFieldElementAdapter();
      }
      @Override
      public Adapter caseLlmTaskDefinition(LlmTaskDefinition object)
      {
        return createLlmTaskDefinitionAdapter();
      }
      @Override
      public Adapter caseAnnotationInterfaceReference(AnnotationInterfaceReference object)
      {
        return createAnnotationInterfaceReferenceAdapter();
      }
      @Override
      public Adapter caseLlmVariableAssignment(LlmVariableAssignment object)
      {
        return createLlmVariableAssignmentAdapter();
      }
      @Override
      public Adapter caseWorkflowDefinition(WorkflowDefinition object)
      {
        return createWorkflowDefinitionAdapter();
      }
      @Override
      public Adapter caseWorkflowIfStatement(WorkflowIfStatement object)
      {
        return createWorkflowIfStatementAdapter();
      }
      @Override
      public Adapter caseWorkflowDefinitionApplyLLMTaskStatement(WorkflowDefinitionApplyLLMTaskStatement object)
      {
        return createWorkflowDefinitionApplyLLMTaskStatementAdapter();
      }
      @Override
      public Adapter caseWorkflowDefinitionApplyLLMNodeResultAssignment(WorkflowDefinitionApplyLLMNodeResultAssignment object)
      {
        return createWorkflowDefinitionApplyLLMNodeResultAssignmentAdapter();
      }
      @Override
      public Adapter caseELEMENTTYPE(ELEMENTTYPE object)
      {
        return createELEMENTTYPEAdapter();
      }
      @Override
      public Adapter caseBASICTYPE(BASICTYPE object)
      {
        return createBASICTYPEAdapter();
      }
      @Override
      public Adapter caseSAIAssignment(SAIAssignment object)
      {
        return createSAIAssignmentAdapter();
      }
      @Override
      public Adapter caseSAIMemberSelection(SAIMemberSelection object)
      {
        return createSAIMemberSelectionAdapter();
      }
      @Override
      public Adapter caseSAIStringConstant(SAIStringConstant object)
      {
        return createSAIStringConstantAdapter();
      }
      @Override
      public Adapter caseSAIIntConstant(SAIIntConstant object)
      {
        return createSAIIntConstantAdapter();
      }
      @Override
      public Adapter caseSAIBoolConstant(SAIBoolConstant object)
      {
        return createSAIBoolConstantAdapter();
      }
      @Override
      public Adapter caseSAINull(SAINull object)
      {
        return createSAINullAdapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.Model <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.Model
   * @generated
   */
  public Adapter createModelAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.WorkflowFunctionsDefinition <em>Workflow Functions Definition</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.WorkflowFunctionsDefinition
   * @generated
   */
  public Adapter createWorkflowFunctionsDefinitionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.SAIMember <em>SAI Member</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.SAIMember
   * @generated
   */
  public Adapter createSAIMemberAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.SAIField <em>SAI Field</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.SAIField
   * @generated
   */
  public Adapter createSAIFieldAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.SAIMethod <em>SAI Method</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.SAIMethod
   * @generated
   */
  public Adapter createSAIMethodAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.SAIParameter <em>SAI Parameter</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.SAIParameter
   * @generated
   */
  public Adapter createSAIParameterAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.SAIBlock <em>SAI Block</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.SAIBlock
   * @generated
   */
  public Adapter createSAIBlockAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.SAIStatement <em>SAI Statement</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.SAIStatement
   * @generated
   */
  public Adapter createSAIStatementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.SAIVariableDeclaration <em>SAI Variable Declaration</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.SAIVariableDeclaration
   * @generated
   */
  public Adapter createSAIVariableDeclarationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.SAIReturn <em>SAI Return</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.SAIReturn
   * @generated
   */
  public Adapter createSAIReturnAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.SAIIfStatement <em>SAI If Statement</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.SAIIfStatement
   * @generated
   */
  public Adapter createSAIIfStatementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.SAIIfBlock <em>SAI If Block</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.SAIIfBlock
   * @generated
   */
  public Adapter createSAIIfBlockAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.SAIExpression <em>SAI Expression</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.SAIExpression
   * @generated
   */
  public Adapter createSAIExpressionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.PackageDeclaration <em>Package Declaration</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.PackageDeclaration
   * @generated
   */
  public Adapter createPackageDeclarationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.ImportDeclaration <em>Import Declaration</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.ImportDeclaration
   * @generated
   */
  public Adapter createImportDeclarationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.WorkflowInputDefinition <em>Workflow Input Definition</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.WorkflowInputDefinition
   * @generated
   */
  public Adapter createWorkflowInputDefinitionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.WorkflowUIElement <em>Workflow UI Element</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.WorkflowUIElement
   * @generated
   */
  public Adapter createWorkflowUIElementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.WorkflowUIElementMap <em>Workflow UI Element Map</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.WorkflowUIElementMap
   * @generated
   */
  public Adapter createWorkflowUIElementMapAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.WorkflowDataDictionaryDefinition <em>Workflow Data Dictionary Definition</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.WorkflowDataDictionaryDefinition
   * @generated
   */
  public Adapter createWorkflowDataDictionaryDefinitionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.DatadictionaryKeyValuePair <em>Datadictionary Key Value Pair</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.DatadictionaryKeyValuePair
   * @generated
   */
  public Adapter createDatadictionaryKeyValuePairAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.DataDictionaryValue <em>Data Dictionary Value</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.DataDictionaryValue
   * @generated
   */
  public Adapter createDataDictionaryValueAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.DataDictionaryArrayValue <em>Data Dictionary Array Value</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.DataDictionaryArrayValue
   * @generated
   */
  public Adapter createDataDictionaryArrayValueAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.DataDictionaryMapValue <em>Data Dictionary Map Value</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.DataDictionaryMapValue
   * @generated
   */
  public Adapter createDataDictionaryMapValueAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.DataDictionaryBooleanValue <em>Data Dictionary Boolean Value</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.DataDictionaryBooleanValue
   * @generated
   */
  public Adapter createDataDictionaryBooleanValueAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.DataDictionaryStringValue <em>Data Dictionary String Value</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.DataDictionaryStringValue
   * @generated
   */
  public Adapter createDataDictionaryStringValueAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.DataDictionaryNullValue <em>Data Dictionary Null Value</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.DataDictionaryNullValue
   * @generated
   */
  public Adapter createDataDictionaryNullValueAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.VMNodeDefinition <em>VM Node Definition</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.VMNodeDefinition
   * @generated
   */
  public Adapter createVMNodeDefinitionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.VMNodeEleemnts <em>VM Node Eleemnts</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.VMNodeEleemnts
   * @generated
   */
  public Adapter createVMNodeEleemntsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.VMNodeOpCodeElement <em>VM Node Op Code Element</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.VMNodeOpCodeElement
   * @generated
   */
  public Adapter createVMNodeOpCodeElementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.VMNodeOutElements <em>VM Node Out Elements</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.VMNodeOutElements
   * @generated
   */
  public Adapter createVMNodeOutElementsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.VMNodeInElements <em>VM Node In Elements</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.VMNodeInElements
   * @generated
   */
  public Adapter createVMNodeInElementsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.VMNodeFieldElements <em>VM Node Field Elements</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.VMNodeFieldElements
   * @generated
   */
  public Adapter createVMNodeFieldElementsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.VMNodeOutElement <em>VM Node Out Element</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.VMNodeOutElement
   * @generated
   */
  public Adapter createVMNodeOutElementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.VMNodeInElement <em>VM Node In Element</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.VMNodeInElement
   * @generated
   */
  public Adapter createVMNodeInElementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.VMFieldElement <em>VM Field Element</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.VMFieldElement
   * @generated
   */
  public Adapter createVMFieldElementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.VMOverrideFieldElement <em>VM Override Field Element</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.VMOverrideFieldElement
   * @generated
   */
  public Adapter createVMOverrideFieldElementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.LlmTaskDefinition <em>Llm Task Definition</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.LlmTaskDefinition
   * @generated
   */
  public Adapter createLlmTaskDefinitionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.AnnotationInterfaceReference <em>Annotation Interface Reference</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.AnnotationInterfaceReference
   * @generated
   */
  public Adapter createAnnotationInterfaceReferenceAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.LlmVariableAssignment <em>Llm Variable Assignment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.LlmVariableAssignment
   * @generated
   */
  public Adapter createLlmVariableAssignmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.WorkflowDefinition <em>Workflow Definition</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.WorkflowDefinition
   * @generated
   */
  public Adapter createWorkflowDefinitionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.WorkflowIfStatement <em>Workflow If Statement</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.WorkflowIfStatement
   * @generated
   */
  public Adapter createWorkflowIfStatementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.WorkflowDefinitionApplyLLMTaskStatement <em>Workflow Definition Apply LLM Task Statement</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.WorkflowDefinitionApplyLLMTaskStatement
   * @generated
   */
  public Adapter createWorkflowDefinitionApplyLLMTaskStatementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.WorkflowDefinitionApplyLLMNodeResultAssignment <em>Workflow Definition Apply LLM Node Result Assignment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.WorkflowDefinitionApplyLLMNodeResultAssignment
   * @generated
   */
  public Adapter createWorkflowDefinitionApplyLLMNodeResultAssignmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.ELEMENTTYPE <em>ELEMENTTYPE</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.ELEMENTTYPE
   * @generated
   */
  public Adapter createELEMENTTYPEAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.BASICTYPE <em>BASICTYPE</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.BASICTYPE
   * @generated
   */
  public Adapter createBASICTYPEAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.SAIAssignment <em>SAI Assignment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.SAIAssignment
   * @generated
   */
  public Adapter createSAIAssignmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.SAIMemberSelection <em>SAI Member Selection</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.SAIMemberSelection
   * @generated
   */
  public Adapter createSAIMemberSelectionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.SAIStringConstant <em>SAI String Constant</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.SAIStringConstant
   * @generated
   */
  public Adapter createSAIStringConstantAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.SAIIntConstant <em>SAI Int Constant</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.SAIIntConstant
   * @generated
   */
  public Adapter createSAIIntConstantAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.SAIBoolConstant <em>SAI Bool Constant</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.SAIBoolConstant
   * @generated
   */
  public Adapter createSAIBoolConstantAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.mindscan.ai.aidsl.aiDsl.SAINull <em>SAI Null</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.mindscan.ai.aidsl.aiDsl.SAINull
   * @generated
   */
  public Adapter createSAINullAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //AiDslAdapterFactory
